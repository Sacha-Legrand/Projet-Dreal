shinyServer(function(input,output,session){
    
    ##############################################################
    # INTRODUCTION
    ##############################################################
    
    
    
    # ############################################################ #
    # FIN INTRODUCTION
    # ############################################################ #
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    ##############################################################
    # CARTOGRAPHIE
    ##############################################################
    
    # ------------------------------------------------------------ #
    # map_sondes : carte des sondes
    output$map_sondes <- renderLeaflet({
        
        leaflet() %>%
            addTiles() %>%
            addAwesomeMarkers(data = db_sonde_synthese, 
                              lng=db_sonde_synthese$longitude,lat=db_sonde_synthese$latitude,
                              layerId = db_sonde_synthese$id_sonde, group="DREAL",
                              icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                                   iconColor = 'white', markerColor = 'blue'))# %>%
        #addAwesomeMarkers(data = SondesOFB, layerId = SondesOFB$Name, group = "OFB") %>%
        #addPopups(data = db_sonde_synthese, group = "DREAL", popup=paste("Sonde ",db_sonde_synthese$id_sonde)) %>%
        #addPopupImages(db_sonde_synthese$img, group = "DREAL",width = 400, tooltip=F)
        
        
    })
    
    
    observeEvent(input$OFB, {
        proxy <- leafletProxy("map_sondes")
        
        proxy %>% clearGroup(group="OFB")
        
        if(input$OFB){
            proxy %>%
                addAwesomeMarkers(data = SondesOFB, layerId = SondesOFB$Name, group = "OFB",
                                  icon = makeAwesomeIcon(icon = 'tint', library = 'glyphicon',
                                                         iconColor = 'white', markerColor = 'gray',
                                                         iconRotate = 10))
        }
        
    })
    
    observeEvent(input$DREAL, {
        proxy <- leafletProxy("map_sondes")
        
        proxy %>% clearGroup(group="DREAL")
        
        if(input$DREAL){
            proxy %>%
                addAwesomeMarkers(data = db_sonde_synthese, 
                                  lng=db_sonde_synthese$longitude,lat=db_sonde_synthese$latitude,
                                  layerId = db_sonde_synthese$id_sonde, group = "DREAL",
                                  icon = makeAwesomeIcon(icon = 'tint', library = 'glyphicon',
                                                         iconColor = 'white', markerColor = 'blue'))
        }
        
    })
    
    observeEvent(input$link_to_details_sonde, {
        
        updateSelectInput(
            session=session,
            inputId = "choix_sondes",
            selected = id_sonde_reactive$id_sonde_char
        )
        
        updateNavbarPage(session=session, inputId = "menu_principal", selected = "sub_menu_sondes_synthese")
        
        
    })
    
    observeEvent(input$BV1, {
        proxy <- leafletProxy("map_sondes")
        
        proxy %>% 
            clearGroup(group="BV1")
        
        if(input$BV1){
            proxy %>%
                addPolygons(data=BV1, weight=3, layerId = paste0("BV1_",1:nrow(BV1)), group = "BV1",
                            color="#31b94a")
        }
    })
    
    observeEvent(input$ceau, {
        proxy <- leafletProxy("map_sondes")
        
        proxy %>% 
            clearGroup(group="ceau")
        
        if(input$ceau){
            proxy %>%
                addPolylines(data=ceau,group="ceau")
        }
    })
    
    
    id_sonde_reactive <- reactiveValues(
        id_sonde_char = "817",
        sonde_df = as.data.frame(db[db$id_sonde==817,]),
        sonde_label = db_sonde_synthese[which(db_sonde_synthese$id_sonde == "817"),]$label
    )
    
    # sonde_df <- reactive({
    #   as.data.frame(db[db$id_sonde==as.numeric(id_sonde_reactive$id_sonde_char),])
    # })
    
    
    output$ID <- renderText({paste0(id_sonde_reactive$sonde_label," : sonde ",id_sonde_reactive$id_sonde_char)})
    
    output$img_sonde <- renderImage({

        width  <- session$clientData$output_img_sonde_width
        #height <- session$clientData$output_img_sonde_height
        
        # Return a list containing the filename
        list(src = paste0("www/Sonde",id_sonde_reactive$id_sonde_char,".png"),
             width = width,
             #height = height,
             alt = paste0("Emplacement de la sonde ", id_sonde_reactive$id_sonde_char, ", ", id_sonde_reactive$sonde_label))
    }, deleteFile = FALSE)
    
    output$temp_sonde <- renderDygraph({
        sonde_data = xts(id_sonde_reactive$sonde_df$Teau, order.by=id_sonde_reactive$sonde_df$t)
        titre = id_sonde_reactive$sonde_label
        
        dygraph(sonde_data, main = paste0(titre))%>%
            dyAxis("y", label = "Température (°c)", valueRange = c(min(db$Teau)-1, max(db$Teau)+1)) %>%
            dyAxis("x", label = "Date (bi-horaire)", valueRange = c(min(db$Teau)-1, max(db$Teau)+1)) %>%
            dySeries("V1", label=paste0(titre))
        #dyRangeSelector() %>%
        #dyLegend(show = "follow")
    })
    
    # output$table_sonde <- renderTable({
    #   sonde_table = sonde_df() %>%
    #     group_by(id_sonde) %>%
    #     mutate(Min=min(Teau),
    #            t25 = quantile(Teau,.25),
    #            Mediane = median(Teau),
    #            Moyenne = mean(Teau),
    #            sd = sd(Teau),
    #            t75 = quantile(Teau,.75),
    #            Max = max(Teau))
    #   
    #   sonde_table = sonde_table[1, 5:ncol(sonde_table)]
    #   sonde_table
    # })
    
    
    
    
    observeEvent(input$map_sondes_marker_click, {
        clic = input$map_sondes_marker_click
        if(clic$group == "DREAL" & nchar(clic$id)==3){
            id_sonde_reactive$id_sonde_char = clic$id
            id_sonde_reactive$sonde_df = as.data.frame(db[db$id_sonde==as.numeric(clic$id),])
            id_sonde_reactive$sonde_label = db_sonde_synthese[which(db_sonde_synthese$id_sonde == clic$id),]$label
            shinyjs::show(id = "panel_info_sondes")
        }
    })
    
    observeEvent(input$closeIP, {
        shinyjs::hide(id = "panel_info_sondes")
    })
    
    
    # ------------------------------------------------------------ #
    
    
    
    # ------------------------------------------------------------ #
    # map_BV : carte des bassins versants
    # 
    # output$map_BV <- renderLeaflet({
    #   leaflet() %>%
    #     addTiles() %>%
    #     addPolygons(data=BV1, weight=3, layerId = paste0("BV1_",1:nrow(BV1)), group = "BV1")
    # })
    # 
    # 
    # 
    # # observeEvent(input$BV1, {
    # #   proxy <- leafletProxy("map_BV")
    # #   
    # #   proxy %>% 
    # #     clearGroup(group="BV1")
    # #   
    # #   if(input$BV1){
    # #     proxy %>%
    # #       addPolygons(data=BV1, weight=3, layerId = paste0("BV1_",1:nrow(BV1)), group = "BV1")
    # #   }
    # # })
    # 
    # observeEvent(input$BV2, {
    #   proxy <- leafletProxy("map_BV")
    #   proxy %>% 
    #     clearGroup(group="BV2")
    #   
    #   if(input$BV2){
    #     proxy %>%
    #       addPolygons(data=BV2, weight=2, layerId = paste0("BV2_",1:nrow(BV2)), color = "red", group="BV2")
    #   }
    # })
    # 
    # observeEvent(input$BV3, {
    #   proxy <- leafletProxy("map_BV")
    #   proxy %>% 
    #     clearGroup(group="BV3")
    #   
    #   if(input$BV3){
    #     proxy %>%
    #       addPolygons(data=BV3, weight=1, layerId = paste0("BV3_",1:nrow(BV3)), color = "green", group = "BV3")
    #   }
    # })
    
    
    # ------------------------------------------------------------ #
    
    
    
    
    # ------------------------------------------------------------ #
    # map_eau : carte des cours d'eau
    output$map_eau <- renderLeaflet({
        leaflet() %>%
            addTiles() %>%
            
            # marker DREAL
            addAwesomeMarkers(data = db_sonde_synthese, 
                              lng=db_sonde_synthese$longitude,lat=db_sonde_synthese$latitude,
                              layerId = db_sonde_synthese$id_sonde, group="DREAL",
                              icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                                   iconColor = 'white', markerColor = 'blue')) %>%
            
            # marker OFB
            addAwesomeMarkers(data = SondesOFB, layerId = SondesOFB$Name, group = "OFB",
                              icon = makeAwesomeIcon(icon = 'tint', library = 'glyphicon',
                                                     iconColor = 'white', markerColor = 'gray',
                                                     iconRotate = 10)) %>%
            
            # # highlighted marker
            # addAwesomeMarkers(data = db_sonde_synthese[which(db_sonde_synthese$id_sonde=="817"),], 
            #                   lng=db_sonde_synthese[which(db_sonde_synthese$id_sonde=="817"),]$longitude,
            #                   lat=db_sonde_synthese[which(db_sonde_synthese$id_sonde=="817"),]$latitude,
            #                   group="highlight",
            #                   icon=makeAwesomeIcon(icon='tint', library='glyphicon',
            #                                        iconColor = 'white', markerColor = 'orange')) %>%
            
            # grands bassins versants
            addPolygons(data=BV1, weight=3, 
                        layerId = paste0("BV1_",1:nrow(BV1)), group = "Bassins Versants",
                        color="#31b94a",
                        highlightOptions = highlightOptions(
                            weight = 5,
                            #color = "#FFF",
                            fillOpacity = 0.5,
                            bringToFront = TRUE
                        )) %>%
            
            # cours d'eau
            #addPolylines(data=ceau,group="Cours d'eau", opacity = 1, weight = 1) %>%
            
            addPolylines(data=coursEau2,group="Cours d'eau sonde", 
                         opacity = 1, weight = 2, color = "blue", 
                         layerId = coursEau2$Name) %>%
            
            # addPolylines(data=coursEau2@lines[[7]]@Lines[[1]]@coords,
            #              group="highlight", opacity = 1, weight = 2, color = "cyan") %>%
            
            
            # Layers control
            addLayersControl(
                #baseGroups = c("OSM (default)", "Toner", "Toner Lite"),
                overlayGroups = c("DREAL", "OFB", "Bassins Versants", "Cours d'eau", "Cours d'eau sonde"),#, "highlight"),
                options = layersControlOptions(collapsed = FALSE)
            ) %>% 
            
            hideGroup("OFB") %>%
            hideGroup("Bassins Versants") %>%
            hideGroup("Cours d'eau") %>%
            hideGroup("Cours d'eau sonde") #%>%
        #hideGroup("highlight")
        
        
        
        
        #removeShape(map, layerId)
        
    })
    
    
    map_reactive <- reactiveValues(
        id_sonde_char = "817",
        cours_eau = "Orne",
        pos = 7
    )
    
    
    
    
    observeEvent(input$map_eau_marker_click, {
        clic = input$map_eau_marker_click
        
        
        
        if(clic$id != map_reactive$id_sonde_char){
            if(clic$group == "DREAL"){
                
                coord_sonde_regular = db_sonde_synthese[which(db_sonde_synthese$id_sonde==map_reactive$id_sonde_char),]
                
                map_reactive$id_sonde_char = clic$id
                map_reactive$cours_eau = db_temp[which(db_temp$id_sonde == as.numeric(clic$id)),]$cours_eau
                map_reactive$pos = db_temp[which(db_temp$id_sonde == as.numeric(clic$id)),]$pos
                
                
                coord_sonde_highlight = db_sonde_synthese[which(db_sonde_synthese$id_sonde==clic$id),]
                
                
                proxy <- leafletProxy("map_eau")
                
                proxy %>%
                    clearGroup(group = "highlight") %>%
                    addPolylines(data = coursEau2@lines[[map_reactive$pos]]@Lines[[1]]@coords, group="DREAL",
                                 layerId = "highlight", opacity = 1, weight = 2, color = "cyan") %>%
                    
                    addAwesomeMarkers(data = coord_sonde_highlight, 
                                      lng=coord_sonde_highlight$longitude,lat=coord_sonde_highlight$latitude,
                                      layerId = coord_sonde_highlight$id_sonde, group = "DREAL",
                                      icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                                           iconColor = 'white', markerColor = 'orange')) %>%
                    
                    addAwesomeMarkers(data = coord_sonde_regular, 
                                      lng=coord_sonde_regular$longitude,lat=coord_sonde_regular$latitude,
                                      layerId = coord_sonde_regular$id_sonde, group = "DREAL",
                                      icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                                           iconColor = 'white', markerColor = 'blue'))
                
                #showGroup(group="highlight")
                
                #proxy %>%
                
            }
            
            
            
            
            
        }
        
        
        
        
    })
    # ------------------------------------------------------------ #
    
    
    # ############################################################ #
    # FIN CARTOGRAPHIE
    # ############################################################ #
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    # 
    ##############################################################
    # ANALYSE DES TEMPÉRATURES
    ##############################################################
    
    ##########################################
    # Touques
    ##########################################
    
    ################################
    # Description
    ################################

    
    output$Touquesimg <- renderImage({
        # When input$n is 3, filename is ./images/image3.jpeg
        imagename = paste0(pathimg,"/Touques.png")
        imageOutput(imagename)
        
    })
    db_sonde_synthese_Touques = db_sonde_synthese[db_sonde_synthese$id_sonde == 825 |
                                                      db_sonde_synthese$id_sonde == 827 |
                                                      db_sonde_synthese$id_sonde == 828 |
                                                      db_sonde_synthese$id_sonde == 830 ,]
    output$map_Touques <- renderLeaflet({
        
        leaflet() %>%
            addTiles() %>%
            addAwesomeMarkers(data = db_sonde_synthese_Touques, 
                              lng=db_sonde_synthese_Touques$longitude,lat=db_sonde_synthese_Touques$latitude,
                              #layerId = map_Touques$id_sonde, group="DREAL",
                              icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                                   iconColor = 'white', markerColor = 'orange'),
                              
                              popup =  db_sonde_synthese_Touques$label) %>%
            # addPopups(data = db_sonde_synthese_Touques,
            #           lng=db_sonde_synthese_Touques$longitude,lat=db_sonde_synthese_Touques$latitude,
            #           db_sonde_synthese_Touques$label) %>%
            addPolylines(data=coursEau2[coursEau2@data$Name== "Touques",],color="blue")
        
    })
    
    
    
    ################################
    # Tmoy + MM7
    ################################

    
    # Données moyenne journalière + MM7
    varSelecTouques <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = F,
        `Température maximale MM7` = F
    )
    vec_col_Teau =c("#A6CEE3", "#83e12f", "#FB9A99", "#1F78B4", "#33A02C", "#E31A1C")
    ##############
    # Sonde 825
    ##############
    
    
    output$Sonde825MM7 <- renderDygraph({
        if(varSelecTouques$`Température minimale` == FALSE & 
           varSelecTouques$`Température moyenne`== FALSE &
           varSelecTouques$`Température maximale` == FALSE & 
           varSelecTouques$`Température minimale MM7` == FALSE & 
           varSelecTouques$`Température moyenne MM7` == FALSE &
           varSelecTouques$`Température maximale MM7` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==825),]$date)),
                            order.by = db2[which(db2$id_sonde==825),]$date
            )
        }
        else{
            serie_xts =  db_Touques_xtsa[db_Touques_xtsa$id_sonde == 825 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
                                                                            varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`, F)]
            
        }
        
        check <- as.data.frame(c(0.5,4.5,16.5,19.5,25.5))
        
        y_min = min(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 825]$`Température maximale`)-2
        y_max = max(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 825]$`Température maximale`)+2
        
        if(varSelecTouques$preferendum == "rien"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = TRUE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==825,]$date), max(db2[db2$id_sonde==825,]$date)),
                       drawGrid = TRUE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)])
            
        }
        else if(varSelecTouques$preferendum == "truite"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==825,]$date), max(db2[db2$id_sonde==825,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyLimit(0.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(4.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(16.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "seuil critique", labelLoc = "right", color = "gray18") %>%
                dyLimit(25.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 1, color="#f53838", axis="y") %>%
                dyShading(0.5, 4.5, color="#fafa6e", axis="y") %>%
                dyShading(4.5, 16.5, color="#cafe95", axis="y") %>%
                dyShading(16.5, 19.5, color="#fafa6e", axis="y") %>%
                dyShading(19.5, 25.5, color="#ff7a7a", axis="y") %>%
                dyShading(25.5, 40, color="#f53838", axis="y")
            
        }
        else{
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==825,]$date), max(db2[db2$id_sonde==825,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal adulte", labelLoc = "right", color = "gray18") %>%
                dyLimit(2.5, "seuil létal juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(5.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(9.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "danger pour les embryons", labelLoc = "right", color = "gray18") %>%
                dyLimit(24.5, "danger pour les larves", labelLoc = "right", color = "gray18") %>%
                dyLimit(30.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 2.5, color="#f53838", axis="y") %>%
                dyShading(2.5, 5.5, color="#ff7a7a", axis="y") %>%
                dyShading(5.5, 9.5, color="#fafa6e", axis="y") %>%
                dyShading(9.5, 19.5, color="#cafe95", axis="y") %>%
                dyShading(19.5, 24.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 30.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 40, color="#f53838", axis="y")
            
        }
        
        
    })
    
    
    observeEvent(input$Teau_min, {
        varSelecTouques$`Température minimale` = input$Teau_min
    })
    
    observeEvent(input$Teau_moy, {
        varSelecTouques$`Température moyenne` = input$Teau_moy
    })
    
    observeEvent(input$Teau_max, {
        varSelecTouques$`Température maximale` = input$Teau_max
    })
    
    observeEvent(input$Teau_minMM7, {
        varSelecTouques$`Température minimale MM7` = input$Teau_minMM7
    })
    observeEvent(input$Teau_moyMM7, {
        varSelecTouques$`Température moyenne MM7` = input$Teau_moyMM7
    })
    observeEvent(input$Teau_maxMM7, {
        varSelecTouques$`Température maximale MM7` = input$Teau_maxMM7
    })
    observeEvent(input$preferendum_th, {
        varSelecTouques$preferendum = input$preferendum_th
    })
    
    
    ##############
    # Sonde 827
    ##############
    
    
    output$Sonde827MM7 <- renderDygraph({
        if(varSelecTouques$`Température minimale` == FALSE & 
           varSelecTouques$`Température moyenne`== FALSE &
           varSelecTouques$`Température maximale` == FALSE & 
           varSelecTouques$`Température minimale MM7` == FALSE & 
           varSelecTouques$`Température moyenne MM7` == FALSE &
           varSelecTouques$`Température maximale MM7` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==827),]$date)),
                            order.by = db2[which(db2$id_sonde==827),]$date
            )
        }
        else{
            serie_xts =  db_Touques_xtsa[db_Touques_xtsa$id_sonde == 827 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
                                                                            varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`, F)]
            
        }
        
        check <- as.data.frame(c(0.5,4.5,16.5,19.5,27.5))
        
        y_min = min(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 827]$`Température maximale`)-4
        y_max = max(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 827]$`Température maximale`)+2
        
        if(varSelecTouques$preferendum == "rien"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = TRUE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==827,]$date), max(db2[db2$id_sonde==827,]$date)),
                       drawGrid = TRUE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)])
            
        }
        else if(varSelecTouques$preferendum == "truite"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==827,]$date), max(db2[db2$id_sonde==827,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyLimit(0.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(4.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(16.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "seuil critique", labelLoc = "right", color = "gray18") %>%
                dyLimit(27.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 1, color="#f53838", axis="y") %>%
                dyShading(0.5, 4.5, color="#fafa6e", axis="y") %>%
                dyShading(4.5, 16.5, color="#cafe95", axis="y") %>%
                dyShading(16.5, 19.5, color="#fafa6e", axis="y") %>%
                dyShading(19.5, 27.5, color="#ff7a7a", axis="y") %>%
                dyShading(27.5, 40, color="#f53838", axis="y")
            
        }
        else{
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==827,]$date), max(db2[db2$id_sonde==827,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal adulte", labelLoc = "right", color = "gray18") %>%
                dyLimit(2.5, "seuil létal juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(5.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(9.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "danger pour les embryons", labelLoc = "right", color = "gray18") %>%
                dyLimit(24.5, "danger pour les larves", labelLoc = "right", color = "gray18") %>%
                dyLimit(30.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 2.5, color="#f53838", axis="y") %>%
                dyShading(2.5, 5.5, color="#ff7a7a", axis="y") %>%
                dyShading(5.5, 9.5, color="#fafa6e", axis="y") %>%
                dyShading(9.5, 19.5, color="#cafe95", axis="y") %>%
                dyShading(19.5, 24.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 30.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 40, color="#f53838", axis="y")
            
        }
        
        
    })
    
    # output$Sonde827MM7 <- renderDygraph({
    #     if(varSelecTouques$`Température minimale` == FALSE & 
    #        varSelecTouques$`Température moyenne`== FALSE &
    #        varSelecTouques$`Température maximale` == FALSE & 
    #        varSelecTouques$`Température minimale MM7` == FALSE & 
    #        varSelecTouques$`Température moyenne MM7` == FALSE &
    #        varSelecTouques$`Température maximale MM7` == FALSE 
    #     )
    #     {
    #         serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==827),]$date)),
    #                         order.by = db2[which(db2$id_sonde==827),]$date
    #         )
    #     }
    #     else{
    #         serie_xts =  db_Touques_xtsa[db_Touques_xtsa$id_sonde == 827 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
    #                                                                         varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`)]
    #         
    #     }
    #     
    #     check <- as.data.frame(c(0.5,4.5,16.5,19.5,25.5))
    #     
    #     dygraph(serie_xts, main = "")%>%
    #         dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
    #         dyAxis("x", label = "Temps", 
    #                valueRange = c(min(db2[db2$id_sonde==827,]$date), max(db2[db2$id_sonde==827,]$date)),
    #                drawGrid = TRUE) %>%
    #         dyRangeSelector()%>%
    #         dyHighlight(highlightCircleSize = 5, 
    #                     highlightSeriesBackgroundAlpha = 0.2,
    #                     highlightSeriesOpts = list(strokeWidth = 1),
    #                     hideOnMouseOut = TRUE) %>%
    #         dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
    #                                           varSelecTouques$`Température moyenne`, 
    #                                           varSelecTouques$`Température maximale`,
    #                                           varSelecTouques$`Température minimale MM7`, 
    #                                           varSelecTouques$`Température moyenne MM7`, 
    #                                           varSelecTouques$`Température maximale MM7`)])
    #     #dyLegend(show = "follow")
    #     
    # })
    # 
    
    
    ##############
    # Sonde 828
    ##############
    output$Sonde828MM7 <- renderDygraph({
        if(varSelecTouques$`Température minimale` == FALSE & 
           varSelecTouques$`Température moyenne`== FALSE &
           varSelecTouques$`Température maximale` == FALSE & 
           varSelecTouques$`Température minimale MM7` == FALSE & 
           varSelecTouques$`Température moyenne MM7` == FALSE &
           varSelecTouques$`Température maximale MM7` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==828),]$date)),
                            order.by = db2[which(db2$id_sonde==828),]$date
            )
        }
        else{
            serie_xts =  db_Touques_xtsa[db_Touques_xtsa$id_sonde == 828 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
                                                                            varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`, F)]
            
        }
        
        check <- as.data.frame(c(0.5,4.5,16.5,19.5,28.5))
        
        y_min = min(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 828]$`Température maximale`)-1
        y_max = max(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 828]$`Température maximale`)+1
        
        if(varSelecTouques$preferendum == "rien"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = TRUE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==828,]$date), max(db2[db2$id_sonde==828,]$date)),
                       drawGrid = TRUE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)])
            
        }
        else if(varSelecTouques$preferendum == "truite"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==828,]$date), max(db2[db2$id_sonde==828,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyLimit(0.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(4.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(16.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "seuil critique", labelLoc = "right", color = "gray18") %>%
                dyLimit(28.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 1, color="#f53838", axis="y") %>%
                dyShading(0.5, 4.5, color="#fafa6e", axis="y") %>%
                dyShading(4.5, 16.5, color="#cafe95", axis="y") %>%
                dyShading(16.5, 19.5, color="#fafa6e", axis="y") %>%
                dyShading(19.5, 28.5, color="#ff7a7a", axis="y") %>%
                dyShading(28.5, 40, color="#f53838", axis="y")
            
        }
        else{
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==828,]$date), max(db2[db2$id_sonde==828,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal adulte", labelLoc = "right", color = "gray18") %>%
                dyLimit(2.5, "seuil létal juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(5.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(9.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "danger pour les embryons", labelLoc = "right", color = "gray18") %>%
                dyLimit(24.5, "danger pour les larves", labelLoc = "right", color = "gray18") %>%
                dyLimit(30.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 2.5, color="#f53838", axis="y") %>%
                dyShading(2.5, 5.5, color="#ff7a7a", axis="y") %>%
                dyShading(5.5, 9.5, color="#fafa6e", axis="y") %>%
                dyShading(9.5, 19.5, color="#cafe95", axis="y") %>%
                dyShading(19.5, 24.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 30.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 40, color="#f53838", axis="y")
            
        }
        
        
    })
    # output$Sonde828MM7 <- renderDygraph({
    #     if(varSelecTouques$`Température minimale` == FALSE & 
    #        varSelecTouques$`Température moyenne`== FALSE &
    #        varSelecTouques$`Température maximale` == FALSE & 
    #        varSelecTouques$`Température minimale MM7` == FALSE & 
    #        varSelecTouques$`Température moyenne MM7` == FALSE &
    #        varSelecTouques$`Température maximale MM7` == FALSE 
    #     )
    #     {
    #         serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==828),]$date)),
    #                         order.by = db2[which(db2$id_sonde==828),]$date
    #         )
    #     }
    #     else{
    #         serie_xts =  db_Touques_xtsa[db_Touques_xtsa$id_sonde == 828 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
    #                                                                         varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`)]
    #         
    #     }
    #     
    #     check <- as.data.frame(c(0.5,4.5,16.5,19.5,25.5))
    #     
    #     dygraph(serie_xts, main = "")%>%
    #         dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
    #         dyAxis("x", label = "Temps", 
    #                valueRange = c(min(db2[db2$id_sonde==828,]$date), max(db2[db2$id_sonde==828,]$date)),
    #                drawGrid = TRUE) %>%
    #         dyRangeSelector()%>%
    #         dyHighlight(highlightCircleSize = 5, 
    #                     highlightSeriesBackgroundAlpha = 0.2,
    #                     highlightSeriesOpts = list(strokeWidth = 1),
    #                     hideOnMouseOut = TRUE) %>%
    #         dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
    #                                           varSelecTouques$`Température moyenne`, 
    #                                           varSelecTouques$`Température maximale`,
    #                                           varSelecTouques$`Température minimale MM7`, 
    #                                           varSelecTouques$`Température moyenne MM7`, 
    #                                           varSelecTouques$`Température maximale MM7`)])
    #     #dyLegend(show = "follow")
    # })
    # 
    
    
    
    ##############
    # Sonde 830
    ##############
    
    # output$Sonde830MM7 <- renderDygraph({
    #     if(varSelecTouques$`Température minimale` == FALSE & 
    #        varSelecTouques$`Température moyenne`== FALSE &
    #        varSelecTouques$`Température maximale` == FALSE & 
    #        varSelecTouques$`Température minimale MM7` == FALSE & 
    #        varSelecTouques$`Température moyenne MM7` == FALSE &
    #        varSelecTouques$`Température maximale MM7` == FALSE 
    #     )
    #     {
    #         serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==830),]$date)),
    #                         order.by = db2[which(db2$id_sonde==830),]$date
    #         )
    #     }
    #     else{
    #         serie_xts = db_Touques_xtsa[db_Touques_xtsa$id_sonde == 830 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
    #                                                                        varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`)]
    #         
    #     }
    #     
    #     check <- as.data.frame(c(0.5,4.5,16.5,19.5,25.5))
    #     
    #     dygraph(serie_xts, main = "")%>%
    #         dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
    #         dyAxis("x", label = "Temps", 
    #                valueRange = c(min(db2[db2$id_sonde==830,]$date), max(db2[db2$id_sonde==830,]$date)),
    #                drawGrid = TRUE) %>%
    #         dyRangeSelector()%>%
    #         dyHighlight(highlightCircleSize = 5, 
    #                     highlightSeriesBackgroundAlpha = 0.2,
    #                     highlightSeriesOpts = list(strokeWidth = 1),
    #                     hideOnMouseOut = TRUE) %>%
    #         dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
    #                                           varSelecTouques$`Température moyenne`, 
    #                                           varSelecTouques$`Température maximale`,
    #                                           varSelecTouques$`Température minimale MM7`, 
    #                                           varSelecTouques$`Température moyenne MM7`, 
    #                                           varSelecTouques$`Température maximale MM7`)])
    #     #dyLegend(show = "follow")
    #     
    # })
    
    output$Sonde830MM7 <- renderDygraph({
        if(varSelecTouques$`Température minimale` == FALSE & 
           varSelecTouques$`Température moyenne`== FALSE &
           varSelecTouques$`Température maximale` == FALSE & 
           varSelecTouques$`Température minimale MM7` == FALSE & 
           varSelecTouques$`Température moyenne MM7` == FALSE &
           varSelecTouques$`Température maximale MM7` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==830),]$date)),
                            order.by = db2[which(db2$id_sonde==830),]$date
            )
        }
        else{
            serie_xts =  db_Touques_xtsa[db_Touques_xtsa$id_sonde == 830 ,c(varSelecTouques$`Température minimale`,varSelecTouques$`Température moyenne`,varSelecTouques$`Température maximale`,
                                                                            varSelecTouques$`Température minimale MM7`,varSelecTouques$`Température moyenne MM7`,varSelecTouques$`Température maximale MM7`, F)]
            
        }
        
        check <- as.data.frame(c(0.5,4.5,16.5,19.5,30.5))
        
        y_min = min(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 830]$`Température maximale`)-3
        y_max = max(db_Touques_xtsa[db_Touques_xtsa$id_sonde == 830]$`Température maximale`)
        
        if(varSelecTouques$preferendum == "rien"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = TRUE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==830,]$date), max(db2[db2$id_sonde==830,]$date)),
                       drawGrid = TRUE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)])
            
        }
        else if(varSelecTouques$preferendum == "truite"){
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==830,]$date), max(db2[db2$id_sonde==830,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyLimit(0.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(4.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(16.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "seuil critique", labelLoc = "right", color = "gray18") %>%
                dyLimit(30.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 1, color="#f53838", axis="y") %>%
                dyShading(0.5, 4.5, color="#fafa6e", axis="y") %>%
                dyShading(4.5, 16.5, color="#cafe95", axis="y") %>%
                dyShading(16.5, 19.5, color="#fafa6e", axis="y") %>%
                dyShading(19.5, 30.5, color="#ff7a7a", axis="y") %>%
                dyShading(30.5, 40, color="#f53838", axis="y")
            
        }
        else{
            dygraph(serie_xts, main = "")%>%
                dyAxis("y", label = "Température (en °C)", valueRange = c(y_min, y_max), drawGrid = FALSE) %>%
                dyAxis("x", label = "Temps", 
                       #valueRange = c(min(db2[db2$id_sonde==830,]$date), max(db2[db2$id_sonde==830,]$date)),
                       drawGrid = FALSE) %>%
                dyRangeSelector()%>%
                dyHighlight(highlightCircleSize = 5, 
                            highlightSeriesBackgroundAlpha = 0.4,
                            highlightSeriesOpts = list(strokeWidth = 1),
                            hideOnMouseOut = TRUE) %>%
                dyOptions(colors = vec_col_Teau[c(varSelecTouques$`Température minimale`, 
                                                  varSelecTouques$`Température moyenne`, 
                                                  varSelecTouques$`Température maximale`,
                                                  varSelecTouques$`Température minimale MM7`, 
                                                  varSelecTouques$`Température moyenne MM7`, 
                                                  varSelecTouques$`Température maximale MM7`)]) %>%
                dyLimit(y_min, "seuil létal adulte", labelLoc = "right", color = "gray18") %>%
                dyLimit(2.5, "seuil létal juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(5.5, "danger pour juvéniles", labelLoc = "right", color = "gray18") %>%
                dyLimit(9.5, "préférendum thermique", labelLoc = "right", color = "gray18") %>%
                dyLimit(19.5, "danger pour les embryons", labelLoc = "right", color = "gray18") %>%
                dyLimit(24.5, "danger pour les larves", labelLoc = "right", color = "gray18") %>%
                dyLimit(30.5, "seuil létal", labelLoc = "right", color = "gray18") %>%
                dyShading(y_min, 2.5, color="#f53838", axis="y") %>%
                dyShading(2.5, 5.5, color="#ff7a7a", axis="y") %>%
                dyShading(5.5, 9.5, color="#fafa6e", axis="y") %>%
                dyShading(9.5, 19.5, color="#cafe95", axis="y") %>%
                dyShading(19.5, 24.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 30.5, color="#fafa6e", axis="y") %>%
                dyShading(24.5, 40, color="#f53838", axis="y")
            
        }
        
        
    })
    
    ################################
    # Fréquence
    ################################

    ####################
    # Tableau récap
    ####################
    
     output$Table825Freq = DT::renderDataTable(
         
        prefTouques,  rownames = NULL,
        filter = 'top', options = list(
            pageLength = 5, autoWidth = TRUE
        )
         
         )
       
    ####################
    # Histogrammes
    ####################  
    colLimite = c("Seuil critique" = "#ff2a2a",
                  "Danger pour juvéniles"="#f5f544",
                  "Danger pour les embryons"="#dde02b",
                  "Seuil létal"="#f11111",
                  "Seuil létal juvéniles"="#f53c3c",
                  "Seuil létal adulte"="#f11111",
                  "Préférendum thermique"="#a1ec54",
                  "Sans Espèce"="blue")
    
    
    # dataHist <- reactive({
    #     df2 <- db2 %>%
    #         filter(Espece %in% input$Espece)
    # })
    
    ##############
    # Sonde 825
    ##############
    db825 <-  db2[db2$id_sonde == 825,] 
    dataHist825 <- reactive({
            df2 <- db825 %>%
                 filter(Espece %in% input$EspeceT)%>%
                 filter(An >= input$AnHistT[1] & An <= input$AnHistT[2])
        
    })

    # dataHist825 <- reactive({
    #     subset(
    #         dataHist2(),
    #         id_sonde == 825
    #     )
    # })

    output$hist825 = renderPlotly({
        
        gghist825 <- dataHist825()%>%
            ggplot(aes(x=`Température moyenne`,color=Pref,fill=Pref))+
            geom_histogram(position="identity",alpha=0.5,binwidth = 0.5)+
            labs( #title="Séries brutes des taux d'incidences : ",
                x="Température de l'eau (en °C)",
                y="Nombre d'occurences\n(Sur les  moyennes journalières)")+
            #ylim(0.5,500)+
            scale_color_manual(values =colLimite) +
            scale_fill_manual(values =colLimite ) +
            
            theme_minimal()+
            theme(legend.title = element_blank())
        
        gghist825 <- ggplotly(gghist825)
    })
    
    ##############
    # Sonde 827
    ##############
    
    
    # dataHist827 <- reactive({
    #     subset(
    #         dataHist2(),
    #         id_sonde == 827
    #     )
    # })
    db287 <-  db2[db2$id_sonde == 827,] 
    dataHist827 <- reactive({
        df2 <- db287 %>%
            filter(Espece %in% input$EspeceT)%>%
            filter(An >= input$AnHistT[1] & An <= input$AnHistT[2])
        
    })

    output$hist827 = renderPlotly({
        
        gghist827 <- dataHist827()%>%
            ggplot(aes(x=`Température moyenne`,color=Pref,fill=Pref))+
            geom_histogram(position="identity",alpha=0.5,binwidth = 0.5)+
            labs( #title="Séries brutes des taux d'incidences : ",
                x="Température de l'eau (en °C)",
                y="Nombre d'occurences\n(Sur les  moyennes journalières)")+
            #ylim(0.5,500)+
            scale_color_manual(values =colLimite) +
            scale_fill_manual(values =colLimite ) +
            
            theme_minimal()+
            theme(legend.title = element_blank())
        
        gghist827 <- ggplotly(gghist827)
    })
    
    ##############
    # Sonde 828
    ##############
    
    # dataHist828 <- reactive({
    #     subset(
    #         dataHist2(),
    #         id_sonde == 828
    #     )
    # }) 
    db828 <-  db2[db2$id_sonde == 828,] 
    dataHist828 <- reactive({
        df2 <- db828 %>%
            filter(Espece %in% input$EspeceT)%>%
            filter(An >= input$AnHistT[1] & An <= input$AnHistT[2])
    })
    output$hist828 = renderPlotly({
        
        gghist828 <- dataHist828()%>%
            ggplot(aes(x=`Température moyenne`,color=Pref,fill=Pref))+
            geom_histogram(position="identity",alpha=0.5,binwidth = 0.5)+
            labs( #title="Séries brutes des taux d'incidences : ",
                x="Température de l'eau (en °C)",
                y="Nombre d'occurences\n(Sur les  moyennes journalières)")+
            #ylim(0.5,500)+
            scale_color_manual(values =colLimite) +
            scale_fill_manual(values =colLimite ) +
            
            theme_minimal()+
            theme(legend.title = element_blank())
        
        gghist828 <- ggplotly(gghist828)
    })
    
    ##############
    # Sonde 830
    ##############
    
    # dataHist830 <- reactive({
    #     subset(
    #         dataHist2(),
    #         id_sonde == 830
    #     )
    # })
    
    db830 <-  db2[db2$id_sonde == 830,] 
    dataHist830 <- reactive({
        df2 <- db830%>%
            filter(Espece %in% input$EspeceT)%>%
            filter(An >= input$AnHistT[1] & An <= input$AnHistT[2])
    })
    output$hist830 = renderPlotly({
        
        gghist830 <- dataHist830()%>%
            ggplot(aes(x=`Température moyenne`,color=Pref,fill=Pref))+
            geom_histogram(position="identity",alpha=0.5,binwidth = 0.5)+
            labs( #title="Séries brutes des taux d'incidences : ",
                x="Température de l'eau (en °C)",
                y="Nombre d'occurences\n(Sur les  moyennes journalières)")+
            #ylim(0.5,500)+
            scale_color_manual(values =colLimite) +
            scale_fill_manual(values =colLimite ) +
            
            theme_minimal()+
            theme(legend.title = element_blank())
        
        gghist830 <- ggplotly(gghist830)
    })
    
    ################################
    # Températures lissées sur 30 jours
    ################################
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 30 jours
    # ------------------------------------------------------------ #

        varSelecMM30 <- reactiveValues(
        `Température minimale MM30` = F,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = F,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    observeEvent(input$Teau_minMM30, {
        varSelecMM30$`Température minimale MM30` = input$Teau_minMM30
    })
    
    observeEvent(input$Teau_moyMM30, {
        varSelecMM30$`Température moyenne MM30` = input$Teau_moyMM30
    })
    
    observeEvent(input$Teau_maxMM30, {
        varSelecMM30$`Température maximale MM30` = input$Teau_maxMM30
    })
    
    observeEvent(input$Teau_minreg30, {
        varSelecMM30$`Régression températures min` = input$Teau_minreg30
    })
    observeEvent(input$Teau_maxreg30, {
        varSelecMM30$`Régression températures max` = input$Teau_maxreg30
    })
    
    
    vec_col_MM30 = c("blue", "green", "red", "blue", "red")
    
    ##############
    # Sonde 825
    #############
    
    output$Sonde825MM30 <- renderDygraph({
        if(varSelecMM30$`Température minimale MM30` == FALSE & 
           varSelecMM30$`Température moyenne MM30`== FALSE &
           varSelecMM30$`Température maximale MM30` == FALSE & 
           varSelecMM30$`Régression températures max` == FALSE &
           varSelecMM30$`Régression températures min` == FALSE  
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==825),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==825),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsb[db_Touques_xtsb$id_sonde == 825 ,c(varSelecMM30$`Température minimale MM30`,varSelecMM30$`Température moyenne MM30`,varSelecMM30$`Température maximale MM30`,
                                                                           varSelecMM30$`Régression températures min`,varSelecMM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==825,]$date), max(db2[db2$id_sonde==825,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM30$`Température minimale MM30`, 
                                              varSelecMM30$`Température moyenne MM30` , 
                                              varSelecMM30$`Température maximale MM30` ,
                                              varSelecMM30$`Régression températures min` , 
                                              varSelecMM30$`Régression températures max`)])
    })
    
    
    
    #############
    # Sonde 827
    #############
    
    
    output$Sonde827MM30 <- renderDygraph({
        if(varSelecMM30$`Température minimale MM30` == FALSE & 
           varSelecMM30$`Température moyenne MM30`== FALSE &
           varSelecMM30$`Température maximale MM30` == FALSE & 
           varSelecMM30$`Régression températures min` == FALSE & 
           varSelecMM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==827),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==827),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsb[db_Touques_xtsb$id_sonde == 827,c(varSelecMM30$`Température minimale MM30`,varSelecMM30$`Température moyenne MM30`,varSelecMM30$`Température maximale MM30`,
                                                                          varSelecMM30$`Régression températures min`,varSelecMM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==827,]$date), max(db2[db2$id_sonde==827,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM30$`Température minimale MM30`, 
                                              varSelecMM30$`Température moyenne MM30` , 
                                              varSelecMM30$`Température maximale MM30` ,
                                              varSelecMM30$`Régression températures min` , 
                                              varSelecMM30$`Régression températures max`)])
    })
    
    
    #############
    # Sonde 828
    #############
    

    output$Sonde828MM30 <- renderDygraph({
        if(varSelecMM30$`Température minimale MM30` == FALSE & 
           varSelecMM30$`Température moyenne MM30`== FALSE &
           varSelecMM30$`Température maximale MM30` == FALSE & 
           varSelecMM30$`Régression températures min` == FALSE & 
           varSelecMM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==828),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==828),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsb[db_Touques_xtsb$id_sonde == 828,c(varSelecMM30$`Température minimale MM30`,varSelecMM30$`Température moyenne MM30`,varSelecMM30$`Température maximale MM30`,
                                                                          varSelecMM30$`Régression températures min`,varSelecMM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==828,]$date), max(db2[db2$id_sonde==828,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM30$`Température minimale MM30`, 
                                              varSelecMM30$`Température moyenne MM30` , 
                                              varSelecMM30$`Température maximale MM30` ,
                                              varSelecMM30$`Régression températures min` , 
                                              varSelecMM30$`Régression températures max`)])
    })
    
    
    #############
    # Sonde 830
    #############
    
    
    output$Sonde830MM30 <- renderDygraph({
        if(varSelecMM30$`Température minimale MM30` == FALSE & 
           varSelecMM30$`Température moyenne MM30`== FALSE &
           varSelecMM30$`Température maximale MM30` == FALSE & 
           varSelecMM30$`Régression températures min` == FALSE & 
           varSelecMM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==830),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==830),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsb[db_Touques_xtsb$id_sonde == 830,c(varSelecMM30$`Température minimale MM30`,varSelecMM30$`Température moyenne MM30`,varSelecMM30$`Température maximale MM30`,
                                                                          varSelecMM30$`Régression températures min`,varSelecMM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==830,]$date), max(db2[db2$id_sonde==830,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM30$`Température minimale MM30`, 
                                              varSelecMM30$`Température moyenne MM30` , 
                                              varSelecMM30$`Température maximale MM30` ,
                                              varSelecMM30$`Régression températures min` , 
                                              varSelecMM30$`Régression températures max`)])
    })
    
    
    
    ################################
    # Températures lissées sur 365jours
    ################################
    
    # Températures lissées sur 365 jours
    # ------------------------------------------------------------ #

    varSelecMM365 <- reactiveValues(
        `Température minimale MM365` = F,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = F,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    observeEvent(input$Teau_minMM365, {
        varSelecMM365$`Température minimale MM365` = input$Teau_minMM365
    })
    
    observeEvent(input$Teau_moyMM365, {
        varSelecMM365$`Température moyenne MM365` = input$Teau_moyMM365
    })
    
    observeEvent(input$Teau_maxMM365, {
        varSelecMM365$`Température maximale MM365` = input$Teau_maxMM365
    })
    
    observeEvent(input$Teau_minreg365, {
        varSelecMM365$`Régression températures min` = input$Teau_minreg365
    })
    observeEvent(input$Teau_maxreg365, {
        varSelecMM365$`Régression températures max` = input$Teau_maxreg365
    })
    
    ##############
    # Sonde 825
    #############
    output$Sonde825MM365 <- renderDygraph({
        if(varSelecMM365$`Température minimale MM365` == FALSE & 
           varSelecMM365$`Température moyenne MM365`== FALSE &
           varSelecMM365$`Température maximale MM365` == FALSE & 
           varSelecMM365$`Régression températures min` == FALSE & 
           varSelecMM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==825),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==825),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsc[db_Touques_xtsc$id_sonde == 825,c(varSelecMM365$`Température minimale MM365`,varSelecMM365$`Température moyenne MM365`,varSelecMM365$`Température maximale MM365`,
                                                                          varSelecMM365$`Régression températures min`,varSelecMM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==825,]$date), max(db2[db2$id_sonde==825,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM365$`Température minimale MM365`, 
                                              varSelecMM365$`Température moyenne MM365` , 
                                              varSelecMM365$`Température maximale MM365` ,
                                              varSelecMM365$`Régression températures min` , 
                                              varSelecMM365$`Régression températures max`)])
    })
    
    
    
    
    
    ##############
    # Sonde 827
    #############
    
    
    output$Sonde827MM365 <- renderDygraph({
        if(varSelecMM365$`Température minimale MM365` == FALSE & 
           varSelecMM365$`Température moyenne MM365`== FALSE &
           varSelecMM365$`Température maximale MM365` == FALSE & 
           varSelecMM365$`Régression températures min` == FALSE & 
           varSelecMM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==827),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==827),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsc[db_Touques_xtsc$id_sonde == 827,c(varSelecMM365$`Température minimale MM365`,varSelecMM365$`Température moyenne MM365`,varSelecMM365$`Température maximale MM365`,
                                                                          varSelecMM365$`Régression températures min`,varSelecMM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==827,]$date), max(db2[db2$id_sonde==827,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM365$`Température minimale MM365`, 
                                              varSelecMM365$`Température moyenne MM365` , 
                                              varSelecMM365$`Température maximale MM365`,
                                              varSelecMM365$`Régression températures min`, 
                                              varSelecMM365$`Régression températures max`)])
    })
    
    
    ##############
    # Sonde 828
    #############
    
    varSelecMM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde828MM365 <- renderDygraph({
        if(varSelecMM365$`Température minimale MM365` == FALSE & 
           varSelecMM365$`Température moyenne MM365`== FALSE &
           varSelecMM365$`Température maximale MM365` == FALSE & 
           varSelecMM365$`Régression températures min` == FALSE & 
           varSelecMM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==828),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==828),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsc[db_Touques_xtsc$id_sonde == 828,c(varSelecMM365$`Température minimale MM365`,varSelecMM365$`Température moyenne MM365`,varSelecMM365$`Température maximale MM365`,
                                                                          varSelecMM365$`Régression températures min`,varSelecMM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==828,]$date), max(db2[db2$id_sonde==828,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM365$`Température minimale MM365`, 
                                              varSelecMM365$`Température moyenne MM365`, 
                                              varSelecMM365$`Température maximale MM365`,
                                              varSelecMM365$`Régression températures min`, 
                                              varSelecMM365$`Régression températures max`)])
    })
    
    
    ##############
    # Sonde 830
    #############
    
    varSelecMM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde830MM365 <- renderDygraph({
        if(varSelecMM365$`Température minimale MM365` == FALSE & 
           varSelecMM365$`Température moyenne MM365`== FALSE &
           varSelecMM365$`Température maximale MM365` == FALSE & 
           varSelecMM365$`Régression températures min` == FALSE & 
           varSelecMM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==830),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==830),]$date
            )
        }
        else{
            serie_xts = db_Touques_xtsc[db_Touques_xtsc$id_sonde == 830,c(varSelecMM365$`Température minimale MM365`,varSelecMM365$`Température moyenne MM365`,varSelecMM365$`Température maximale MM365`,
                                                                          varSelecMM365$`Régression températures min`,varSelecMM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyAxis("x", label = "Temps", 
                   valueRange = c(min(db2[db2$id_sonde==830,]$date), max(db2[db2$id_sonde==830,]$date)),
                   drawGrid = TRUE) %>%
            dyRangeSelector()%>%
            dyHighlight(highlightCircleSize = 5, 
                        highlightSeriesBackgroundAlpha = 0.2,
                        highlightSeriesOpts = list(strokeWidth = 1),
                        hideOnMouseOut = TRUE) %>%
            dyOptions(colors = vec_col_MM30[c(varSelecMM365$`Température minimale MM365`, 
                                              varSelecMM365$`Température moyenne MM365` , 
                                              varSelecMM365$`Température maximale MM365`,
                                              varSelecMM365$`Régression températures min`, 
                                              varSelecMM365$`Régression températures max`)])
    })
    
    
    ##########################################
    # Orne
    ##########################################
    # ------------------------------------------------------------ #
    
    # Températures enregistrées\npar les différentes sondes
    # ------------------------------------------------------------ #
    
    # Sonde 817
    
    # Données moyenne journalière + MM7
    varSelec817 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde817MM7 <- renderDygraph({
        if(varSelec817$`Température minimale` == FALSE & 
           varSelec817$`Température moyenne`== FALSE &
           varSelec817$`Température maximale` == FALSE & 
           varSelec817$`Température minimale MM7` == FALSE & 
           varSelec817$`Température maximale MM7` == FALSE & 
           varSelec817$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==817),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==817),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde817a[,c(varSelec817$`Température minimale`,varSelec817$`Température moyenne`,varSelec817$`Température maximale`,
                                            varSelec817$`Température minimale MM7`,varSelec817$`Température moyenne MM7`,varSelec817$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_817, {
        varSelec817$`Température minimale` = input$Teau_min_817
    })
    
    observeEvent(input$Teau_moy_817, {
        varSelec817$`Température moyenne` = input$Teau_moy_817
    })
    
    observeEvent(input$Teau_max_817, {
        varSelec817$`Température maximale` = input$Teau_max_817
    })
    
    observeEvent(input$Teau_min_817MM7, {
        varSelec817$`Température minimale MM7` = input$Teau_min_817MM7
    })
    observeEvent(input$Teau_moy_817MM7, {
        varSelec817$`Température moyenne MM7` = input$Teau_moy_817MM7
    })
    observeEvent(input$Teau_max_817MM7, {
        varSelec817$`Température maximale MM7` = input$Teau_max_817MM7
    })
    
    # Sonde 818
    
    # Données moyenne journalière + MM7
    varSelec818 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde818MM7 <- renderDygraph({
        if(varSelec818$`Température minimale` == FALSE & 
           varSelec818$`Température moyenne`== FALSE &
           varSelec818$`Température maximale` == FALSE & 
           varSelec818$`Température minimale MM7` == FALSE & 
           varSelec818$`Température maximale MM7` == FALSE & 
           varSelec818$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==818),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==818),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde818a[,c(varSelec818$`Température minimale`,varSelec818$`Température moyenne`,varSelec818$`Température maximale`,
                                            varSelec818$`Température minimale MM7`,varSelec818$`Température moyenne MM7`,varSelec818$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_818, {
        varSelec818$`Température minimale` = input$Teau_min_818
    })
    
    observeEvent(input$Teau_moy_818, {
        varSelec818$`Température moyenne` = input$Teau_moy_818
    })
    
    observeEvent(input$Teau_max_818, {
        varSelec818$`Température maximale` = input$Teau_max_818
    })
    
    observeEvent(input$Teau_min_818MM7, {
        varSelec818$`Température minimale MM7` = input$Teau_min_818MM7
    })
    observeEvent(input$Teau_moy_818MM7, {
        varSelec818$`Température moyenne MM7` = input$Teau_moy_818MM7
    })
    observeEvent(input$Teau_max_818MM7, {
        varSelec818$`Température maximale MM7` = input$Teau_max_818MM7
    })
    
    
    
    # Sonde 819
    
    # Données moyenne journalière + MM7
    varSelec819 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde819MM7 <- renderDygraph({
        if(varSelec819$`Température minimale` == FALSE & 
           varSelec819$`Température moyenne`== FALSE &
           varSelec819$`Température maximale` == FALSE & 
           varSelec819$`Température minimale MM7` == FALSE & 
           varSelec819$`Température maximale MM7` == FALSE & 
           varSelec819$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==819),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==819),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde819a[,c(varSelec819$`Température minimale`,varSelec819$`Température moyenne`,varSelec819$`Température maximale`,
                                            varSelec819$`Température minimale MM7`,varSelec819$`Température moyenne MM7`,varSelec819$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_819, {
        varSelec819$`Température minimale` = input$Teau_min_819
    })
    
    observeEvent(input$Teau_moy_819, {
        varSelec819$`Température moyenne` = input$Teau_moy_819
    })
    
    observeEvent(input$Teau_max_819, {
        varSelec819$`Température maximale` = input$Teau_max_819
    })
    
    observeEvent(input$Teau_min_819MM7, {
        varSelec819$`Température minimale MM7` = input$Teau_min_819MM7
    })
    observeEvent(input$Teau_moy_819MM7, {
        varSelec819$`Température moyenne MM7` = input$Teau_moy_819MM7
    })
    observeEvent(input$Teau_max_819MM7, {
        varSelec819$`Température maximale MM7` = input$Teau_max_819MM7
    })
    
    
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 30 jours
    # ------------------------------------------------------------ #
    # Sonde 817
    
    # Données moyenne journalière + MM7
    varSelec817MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde817MM30 <- renderDygraph({
        if(varSelec817MM30$`Température minimale MM30` == FALSE & 
           varSelec817MM30$`Température moyenne MM30`== FALSE &
           varSelec817MM30$`Température maximale MM30` == FALSE & 
           varSelec817MM30$`Régression températures min` == FALSE & 
           varSelec817MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==817),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==817),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde817b[,c(varSelec817MM30$`Température minimale MM30`,varSelec817MM30$`Température moyenne MM30`,varSelec817MM30$`Température maximale MM30`,
                                            varSelec817MM30$`Régression températures min`,varSelec817MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_817MM30, {
        varSelec817MM30$`Température minimale MM30` = input$Teau_min_817MM30
    })
    
    observeEvent(input$Teau_moy_817MM30, {
        varSelec817MM30$`Température moyenne MM30` = input$Teau_moy_817MM30
    })
    
    observeEvent(input$Teau_max_817MM30, {
        varSelec817MM30$`Température maximale MM30` = input$Teau_max_817MM30
    })
    
    observeEvent(input$Teau_min_817reg30, {
        varSelec817MM30$`Régression températures min` = input$Teau_min_817reg30
    })
    observeEvent(input$Teau_max_817reg30, {
        varSelec817MM30$`Régression températures max` = input$Teau_max_817reg30
    })
    
    
    
    # Sonde 818
    
    # Données moyenne journalière + MM7
    varSelec818MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde818MM30 <- renderDygraph({
        if(varSelec818MM30$`Température minimale MM30` == FALSE & 
           varSelec818MM30$`Température moyenne MM30`== FALSE &
           varSelec818MM30$`Température maximale MM30` == FALSE & 
           varSelec818MM30$`Régression températures min` == FALSE & 
           varSelec818MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==818),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==818),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde818b[,c(varSelec818MM30$`Température minimale MM30`,varSelec818MM30$`Température moyenne MM30`,varSelec818MM30$`Température maximale MM30`,
                                            varSelec818MM30$`Régression températures min`,varSelec818MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_818MM30, {
        varSelec818MM30$`Température minimale MM30` = input$Teau_min_818MM30
    })
    
    observeEvent(input$Teau_moy_818MM30, {
        varSelec818MM30$`Température moyenne MM30` = input$Teau_moy_818MM30
    })
    
    observeEvent(input$Teau_max_818MM30, {
        varSelec818MM30$`Température maximale MM30` = input$Teau_max_818MM30
    })
    
    observeEvent(input$Teau_min_818reg30, {
        varSelec818MM30$`Régression températures min` = input$Teau_min_818reg30
    })
    observeEvent(input$Teau_max_818reg30, {
        varSelec818MM30$`Régression températures max` = input$Teau_max_818reg30
    })
    
    # Sonde 819
    
    # Données moyenne journalière + MM7
    varSelec819MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde819MM30 <- renderDygraph({
        if(varSelec819MM30$`Température minimale MM30` == FALSE & 
           varSelec819MM30$`Température moyenne MM30`== FALSE &
           varSelec819MM30$`Température maximale MM30` == FALSE & 
           varSelec819MM30$`Régression températures min` == FALSE & 
           varSelec819MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==819),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==819),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde819b[,c(varSelec819MM30$`Température minimale MM30`,varSelec819MM30$`Température moyenne MM30`,varSelec819MM30$`Température maximale MM30`,
                                            varSelec819MM30$`Régression températures min`,varSelec819MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_819MM30, {
        varSelec819MM30$`Température minimale MM30` = input$Teau_min_819MM30
    })
    
    observeEvent(input$Teau_moy_819MM30, {
        varSelec819MM30$`Température moyenne MM30` = input$Teau_moy_819MM30
    })
    
    observeEvent(input$Teau_max_819MM30, {
        varSelec819MM30$`Température maximale MM30` = input$Teau_max_819MM30
    })
    
    observeEvent(input$Teau_min_819reg30, {
        varSelec819MM30$`Régression températures min` = input$Teau_min_819reg30
    })
    observeEvent(input$Teau_max_819reg30, {
        varSelec819MM30$`Régression températures max` = input$Teau_max_819reg30
    })
    
    
    # ------------------------------------------------------------ #
    
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 365 jours
    # ------------------------------------------------------------ #
    # Sonde 817
    
    # Données moyenne journalière + MM7
    varSelec817MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde817MM365 <- renderDygraph({
        if(varSelec817MM365$`Température minimale MM365` == FALSE & 
           varSelec817MM365$`Température moyenne MM365`== FALSE &
           varSelec817MM365$`Température maximale MM365` == FALSE & 
           varSelec817MM365$`Régression températures min` == FALSE & 
           varSelec817MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==817),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==817),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde817c[,c(varSelec817MM365$`Température minimale MM365`,varSelec817MM365$`Température moyenne MM365`,varSelec817MM365$`Température maximale MM365`,
                                            varSelec817MM365$`Régression températures min`,varSelec817MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(8, 17)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_817MM365, {
        varSelec817MM365$`Température minimale MM365` = input$Teau_min_817MM365
    })
    
    observeEvent(input$Teau_moy_817MM365, {
        varSelec817MM365$`Température moyenne MM365` = input$Teau_moy_817MM365
    })
    
    observeEvent(input$Teau_max_817MM365, {
        varSelec817MM365$`Température maximale MM365` = input$Teau_max_817MM365
    })
    
    observeEvent(input$Teau_min_817reg365, {
        varSelec817MM365$`Régression températures min` = input$Teau_min_817reg365
    })
    observeEvent(input$Teau_max_817reg365, {
        varSelec817MM365$`Régression températures max` = input$Teau_max_817reg365
    })
    
    
    
    # Sonde 818
    
    # Données moyenne journalière + MM7
    varSelec818MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde818MM365 <- renderDygraph({
        if(varSelec818MM365$`Température minimale MM365` == FALSE & 
           varSelec818MM365$`Température moyenne MM365`== FALSE &
           varSelec818MM365$`Température maximale MM365` == FALSE & 
           varSelec818MM365$`Régression températures min` == FALSE & 
           varSelec818MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==818),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==818),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde818c[,c(varSelec818MM365$`Température minimale MM365`,varSelec818MM365$`Température moyenne MM365`,varSelec818MM365$`Température maximale MM365`,
                                            varSelec818MM365$`Régression températures min`,varSelec818MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(8, 17)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_818MM365, {
        varSelec818MM365$`Température minimale MM365` = input$Teau_min_818MM365
    })
    
    observeEvent(input$Teau_moy_818MM365, {
        varSelec818MM365$`Température moyenne MM365` = input$Teau_moy_818MM365
    })
    
    observeEvent(input$Teau_max_818MM365, {
        varSelec818MM365$`Température maximale MM365` = input$Teau_max_818MM365
    })
    
    observeEvent(input$Teau_min_818reg365, {
        varSelec818MM365$`Régression températures min` = input$Teau_min_818reg365
    })
    observeEvent(input$Teau_max_818reg365, {
        varSelec818MM365$`Régression températures max` = input$Teau_max_818reg365
    })
    
    # Sonde 819
    
    # Données moyenne journalière + MM7
    varSelec819MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde819MM365 <- renderDygraph({
        if(varSelec819MM365$`Température minimale MM365` == FALSE & 
           varSelec819MM365$`Température moyenne MM365`== FALSE &
           varSelec819MM365$`Température maximale MM365` == FALSE & 
           varSelec819MM365$`Régression températures min` == FALSE & 
           varSelec819MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==819),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==819),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde819c[,c(varSelec819MM365$`Température minimale MM365`,varSelec819MM365$`Température moyenne MM365`,varSelec819MM365$`Température maximale MM365`,
                                            varSelec819MM365$`Régression températures min`,varSelec819MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(8, 17)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_819MM365, {
        varSelec819MM365$`Température minimale MM365` = input$Teau_min_819MM365
    })
    
    observeEvent(input$Teau_moy_819MM365, {
        varSelec819MM365$`Température moyenne MM365` = input$Teau_moy_819MM365
    })
    
    observeEvent(input$Teau_max_819MM365, {
        varSelec819MM365$`Température maximale MM365` = input$Teau_max_819MM365
    })
    
    observeEvent(input$Teau_min_819reg365, {
        varSelec819MM365$`Régression températures min` = input$Teau_min_819reg365
    })
    observeEvent(input$Teau_max_819reg365, {
        varSelec819MM365$`Régression températures max` = input$Teau_max_819reg365
    })
    
    ##########################################
    # Odon
    ##########################################
    # ------------------------------------------------------------ #
    
    # Températures enregistrées\npar les différentes sondes
    # ------------------------------------------------------------ #
    
    # Sonde 812
    
    # Données moyenne journalière + MM7
    varSelec812 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde812MM7 <- renderDygraph({
        if(varSelec812$`Température minimale` == FALSE & 
           varSelec812$`Température moyenne`== FALSE &
           varSelec812$`Température maximale` == FALSE & 
           varSelec812$`Température minimale MM7` == FALSE & 
           varSelec812$`Température maximale MM7` == FALSE & 
           varSelec812$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==812),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==812),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde812a[,c(varSelec812$`Température minimale`,varSelec812$`Température moyenne`,varSelec812$`Température maximale`,
                                            varSelec812$`Température minimale MM7`,varSelec812$`Température moyenne MM7`,varSelec812$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_812, {
        varSelec812$`Température minimale` = input$Teau_min_812
    })
    
    observeEvent(input$Teau_moy_812, {
        varSelec812$`Température moyenne` = input$Teau_moy_812
    })
    
    observeEvent(input$Teau_max_812, {
        varSelec812$`Température maximale` = input$Teau_max_812
    })
    
    observeEvent(input$Teau_min_812MM7, {
        varSelec812$`Température minimale MM7` = input$Teau_min_812MM7
    })
    observeEvent(input$Teau_moy_812MM7, {
        varSelec812$`Température moyenne MM7` = input$Teau_moy_812MM7
    })
    observeEvent(input$Teau_max_812MM7, {
        varSelec812$`Température maximale MM7` = input$Teau_max_812MM7
    })
    
    # Sonde 813
    
    # Données moyenne journalière + MM7
    varSelec813 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde813MM7 <- renderDygraph({
        if(varSelec813$`Température minimale` == FALSE & 
           varSelec813$`Température moyenne`== FALSE &
           varSelec813$`Température maximale` == FALSE & 
           varSelec813$`Température minimale MM7` == FALSE & 
           varSelec813$`Température maximale MM7` == FALSE & 
           varSelec813$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==813),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==813),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde813a[,c(varSelec813$`Température minimale`,varSelec813$`Température moyenne`,varSelec813$`Température maximale`,
                                            varSelec813$`Température minimale MM7`,varSelec813$`Température moyenne MM7`,varSelec813$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_813, {
        varSelec813$`Température minimale` = input$Teau_min_813
    })
    
    observeEvent(input$Teau_moy_813, {
        varSelec813$`Température moyenne` = input$Teau_moy_813
    })
    
    observeEvent(input$Teau_max_813, {
        varSelec813$`Température maximale` = input$Teau_max_813
    })
    
    observeEvent(input$Teau_min_813MM7, {
        varSelec813$`Température minimale MM7` = input$Teau_min_813MM7
    })
    observeEvent(input$Teau_moy_813MM7, {
        varSelec813$`Température moyenne MM7` = input$Teau_moy_813MM7
    })
    observeEvent(input$Teau_max_813MM7, {
        varSelec813$`Température maximale MM7` = input$Teau_max_813MM7
    })
    
    
    
    # Sonde 815
    
    # Données moyenne journalière + MM7
    varSelec815 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde815MM7 <- renderDygraph({
        if(varSelec815$`Température minimale` == FALSE & 
           varSelec815$`Température moyenne`== FALSE &
           varSelec815$`Température maximale` == FALSE & 
           varSelec815$`Température minimale MM7` == FALSE & 
           varSelec815$`Température maximale MM7` == FALSE & 
           varSelec815$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==815),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==815),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde815a[,c(varSelec815$`Température minimale`,varSelec815$`Température moyenne`,varSelec815$`Température maximale`,
                                            varSelec815$`Température minimale MM7`,varSelec815$`Température moyenne MM7`,varSelec815$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_815, {
        varSelec815$`Température minimale` = input$Teau_min_815
    })
    
    observeEvent(input$Teau_moy_815, {
        varSelec815$`Température moyenne` = input$Teau_moy_815
    })
    
    observeEvent(input$Teau_max_815, {
        varSelec815$`Température maximale` = input$Teau_max_815
    })
    
    observeEvent(input$Teau_min_815MM7, {
        varSelec815$`Température minimale MM7` = input$Teau_min_815MM7
    })
    observeEvent(input$Teau_moy_815MM7, {
        varSelec815$`Température moyenne MM7` = input$Teau_moy_815MM7
    })
    observeEvent(input$Teau_max_815MM7, {
        varSelec815$`Température maximale MM7` = input$Teau_max_815MM7
    })
    
    # Sonde 816
    
    # Données moyenne journalière + MM7
    varSelec816 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde816MM7 <- renderDygraph({
        if(varSelec816$`Température minimale` == FALSE & 
           varSelec816$`Température moyenne`== FALSE &
           varSelec816$`Température maximale` == FALSE & 
           varSelec816$`Température minimale MM7` == FALSE & 
           varSelec816$`Température maximale MM7` == FALSE & 
           varSelec816$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==816),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==816),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde816a[,c(varSelec816$`Température minimale`,varSelec816$`Température moyenne`,varSelec816$`Température maximale`,
                                            varSelec816$`Température minimale MM7`,varSelec816$`Température moyenne MM7`,varSelec816$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_816, {
        varSelec816$`Température minimale` = input$Teau_min_816
    })
    
    observeEvent(input$Teau_moy_816, {
        varSelec816$`Température moyenne` = input$Teau_moy_816
    })
    
    observeEvent(input$Teau_max_816, {
        varSelec816$`Température maximale` = input$Teau_max_816
    })
    
    observeEvent(input$Teau_min_816MM7, {
        varSelec816$`Température minimale MM7` = input$Teau_min_816MM7
    })
    observeEvent(input$Teau_moy_816MM7, {
        varSelec816$`Température moyenne MM7` = input$Teau_moy_816MM7
    })
    observeEvent(input$Teau_max_816MM7, {
        varSelec816$`Température maximale MM7` = input$Teau_max_816MM7
    })
    
    
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 30 jours
    # ------------------------------------------------------------ #
    # Sonde 812
    
    # Données moyenne journalière + MM7
    varSelec812MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde812MM30 <- renderDygraph({
        if(varSelec812MM30$`Température minimale MM30` == FALSE & 
           varSelec812MM30$`Température moyenne MM30`== FALSE &
           varSelec812MM30$`Température maximale MM30` == FALSE & 
           varSelec812MM30$`Régression températures min` == FALSE & 
           varSelec812MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==812),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==812),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde812b[,c(varSelec812MM30$`Température minimale MM30`,varSelec812MM30$`Température moyenne MM30`,varSelec812MM30$`Température maximale MM30`,
                                            varSelec812MM30$`Régression températures min`,varSelec812MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_812MM30, {
        varSelec812MM30$`Température minimale MM30` = input$Teau_min_812MM30
    })
    
    observeEvent(input$Teau_moy_812MM30, {
        varSelec812MM30$`Température moyenne MM30` = input$Teau_moy_812MM30
    })
    
    observeEvent(input$Teau_max_812MM30, {
        varSelec812MM30$`Température maximale MM30` = input$Teau_max_812MM30
    })
    
    observeEvent(input$Teau_min_812reg30, {
        varSelec812MM30$`Régression températures min` = input$Teau_min_812reg30
    })
    observeEvent(input$Teau_max_812reg30, {
        varSelec812MM30$`Régression températures max` = input$Teau_max_812reg30
    })
    
    
    
    # Sonde 813
    
    # Données moyenne journalière + MM7
    varSelec813MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde813MM30 <- renderDygraph({
        if(varSelec813MM30$`Température minimale MM30` == FALSE & 
           varSelec813MM30$`Température moyenne MM30`== FALSE &
           varSelec813MM30$`Température maximale MM30` == FALSE & 
           varSelec813MM30$`Régression températures min` == FALSE & 
           varSelec813MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==813),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==813),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde813b[,c(varSelec813MM30$`Température minimale MM30`,varSelec813MM30$`Température moyenne MM30`,varSelec813MM30$`Température maximale MM30`,
                                            varSelec813MM30$`Régression températures min`,varSelec813MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_813MM30, {
        varSelec813MM30$`Température minimale MM30` = input$Teau_min_813MM30
    })
    
    observeEvent(input$Teau_moy_813MM30, {
        varSelec813MM30$`Température moyenne MM30` = input$Teau_moy_813MM30
    })
    
    observeEvent(input$Teau_max_813MM30, {
        varSelec813MM30$`Température maximale MM30` = input$Teau_max_813MM30
    })
    
    observeEvent(input$Teau_min_813reg30, {
        varSelec813MM30$`Régression températures min` = input$Teau_min_813reg30
    })
    observeEvent(input$Teau_max_813reg30, {
        varSelec813MM30$`Régression températures max` = input$Teau_max_813reg30
    })
    
    # Sonde 815
    
    # Données moyenne journalière + MM7
    varSelec815MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde815MM30 <- renderDygraph({
        if(varSelec815MM30$`Température minimale MM30` == FALSE & 
           varSelec815MM30$`Température moyenne MM30`== FALSE &
           varSelec815MM30$`Température maximale MM30` == FALSE & 
           varSelec815MM30$`Régression températures min` == FALSE & 
           varSelec815MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==815),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==815),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde815b[,c(varSelec815MM30$`Température minimale MM30`,varSelec815MM30$`Température moyenne MM30`,varSelec815MM30$`Température maximale MM30`,
                                            varSelec815MM30$`Régression températures min`,varSelec815MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_815MM30, {
        varSelec815MM30$`Température minimale MM30` = input$Teau_min_815MM30
    })
    
    observeEvent(input$Teau_moy_815MM30, {
        varSelec815MM30$`Température moyenne MM30` = input$Teau_moy_815MM30
    })
    
    observeEvent(input$Teau_max_815MM30, {
        varSelec815MM30$`Température maximale MM30` = input$Teau_max_815MM30
    })
    
    observeEvent(input$Teau_min_815reg30, {
        varSelec815MM30$`Régression températures min` = input$Teau_min_815reg30
    })
    observeEvent(input$Teau_max_815reg30, {
        varSelec815MM30$`Régression températures max` = input$Teau_max_815reg30
    })
    
    # Sonde 816
    
    # Données moyenne journalière + MM7
    varSelec816MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde816MM30 <- renderDygraph({
        if(varSelec816MM30$`Température minimale MM30` == FALSE & 
           varSelec816MM30$`Température moyenne MM30`== FALSE &
           varSelec816MM30$`Température maximale MM30` == FALSE & 
           varSelec816MM30$`Régression températures min` == FALSE & 
           varSelec816MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==816),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==816),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde816b[,c(varSelec816MM30$`Température minimale MM30`,varSelec816MM30$`Température moyenne MM30`,varSelec816MM30$`Température maximale MM30`,
                                            varSelec816MM30$`Régression températures min`,varSelec816MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_816MM30, {
        varSelec816MM30$`Température minimale MM30` = input$Teau_min_816MM30
    })
    
    observeEvent(input$Teau_moy_816MM30, {
        varSelec816MM30$`Température moyenne MM30` = input$Teau_moy_816MM30
    })
    
    observeEvent(input$Teau_max_816MM30, {
        varSelec816MM30$`Température maximale MM30` = input$Teau_max_816MM30
    })
    
    observeEvent(input$Teau_min_816reg30, {
        varSelec816MM30$`Régression températures min` = input$Teau_min_816reg30
    })
    observeEvent(input$Teau_max_816reg30, {
        varSelec816MM30$`Régression températures max` = input$Teau_max_816reg30
    })
    
    # ------------------------------------------------------------ #
    
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 365 jours
    # ------------------------------------------------------------ #
    # Sonde 812
    
    # Données moyenne journalière + MM7
    varSelec812MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde812MM365 <- renderDygraph({
        if(varSelec812MM365$`Température minimale MM365` == FALSE & 
           varSelec812MM365$`Température moyenne MM365`== FALSE &
           varSelec812MM365$`Température maximale MM365` == FALSE & 
           varSelec812MM365$`Régression températures min` == FALSE & 
           varSelec812MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==812),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==812),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde812c[,c(varSelec812MM365$`Température minimale MM365`,varSelec812MM365$`Température moyenne MM365`,varSelec812MM365$`Température maximale MM365`,
                                            varSelec812MM365$`Régression températures min`,varSelec812MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_812MM365, {
        varSelec812MM365$`Température minimale MM365` = input$Teau_min_812MM365
    })
    
    observeEvent(input$Teau_moy_812MM365, {
        varSelec812MM365$`Température moyenne MM365` = input$Teau_moy_812MM365
    })
    
    observeEvent(input$Teau_max_812MM365, {
        varSelec812MM365$`Température maximale MM365` = input$Teau_max_812MM365
    })
    
    observeEvent(input$Teau_min_812reg365, {
        varSelec812MM365$`Régression températures min` = input$Teau_min_812reg365
    })
    observeEvent(input$Teau_max_812reg365, {
        varSelec812MM365$`Régression températures max` = input$Teau_max_812reg365
    })
    
    
    
    # Sonde 813
    
    # Données moyenne journalière + MM7
    varSelec813MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde813MM365 <- renderDygraph({
        if(varSelec813MM365$`Température minimale MM365` == FALSE & 
           varSelec813MM365$`Température moyenne MM365`== FALSE &
           varSelec813MM365$`Température maximale MM365` == FALSE & 
           varSelec813MM365$`Régression températures min` == FALSE & 
           varSelec813MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==813),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==813),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde813c[,c(varSelec813MM365$`Température minimale MM365`,varSelec813MM365$`Température moyenne MM365`,varSelec813MM365$`Température maximale MM365`,
                                            varSelec813MM365$`Régression températures min`,varSelec813MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_813MM365, {
        varSelec813MM365$`Température minimale MM365` = input$Teau_min_813MM365
    })
    
    observeEvent(input$Teau_moy_813MM365, {
        varSelec813MM365$`Température moyenne MM365` = input$Teau_moy_813MM365
    })
    
    observeEvent(input$Teau_max_813MM365, {
        varSelec813MM365$`Température maximale MM365` = input$Teau_max_813MM365
    })
    
    observeEvent(input$Teau_min_813reg365, {
        varSelec813MM365$`Régression températures min` = input$Teau_min_813reg365
    })
    observeEvent(input$Teau_max_813reg365, {
        varSelec813MM365$`Régression températures max` = input$Teau_max_813reg365
    })
    
    # Sonde 815
    
    # Données moyenne journalière + MM7
    varSelec815MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde815MM365 <- renderDygraph({
        if(varSelec815MM365$`Température minimale MM365` == FALSE & 
           varSelec815MM365$`Température moyenne MM365`== FALSE &
           varSelec815MM365$`Température maximale MM365` == FALSE & 
           varSelec815MM365$`Régression températures min` == FALSE & 
           varSelec815MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==815),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==815),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde815c[,c(varSelec815MM365$`Température minimale MM365`,varSelec815MM365$`Température moyenne MM365`,varSelec815MM365$`Température maximale MM365`,
                                            varSelec815MM365$`Régression températures min`,varSelec815MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_815MM365, {
        varSelec815MM365$`Température minimale MM365` = input$Teau_min_815MM365
    })
    
    observeEvent(input$Teau_moy_815MM365, {
        varSelec815MM365$`Température moyenne MM365` = input$Teau_moy_815MM365
    })
    
    observeEvent(input$Teau_max_815MM365, {
        varSelec815MM365$`Température maximale MM365` = input$Teau_max_815MM365
    })
    
    observeEvent(input$Teau_min_815reg365, {
        varSelec815MM365$`Régression températures min` = input$Teau_min_815reg365
    })
    observeEvent(input$Teau_max_815reg365, {
        varSelec815MM365$`Régression températures max` = input$Teau_max_815reg365
    })
    
    # Sonde 816
    
    # Données moyenne journalière + MM7
    varSelec816MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde816MM365 <- renderDygraph({
        if(varSelec816MM365$`Température minimale MM365` == FALSE & 
           varSelec816MM365$`Température moyenne MM365`== FALSE &
           varSelec816MM365$`Température maximale MM365` == FALSE & 
           varSelec816MM365$`Régression températures min` == FALSE & 
           varSelec816MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==816),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==816),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde816c[,c(varSelec816MM365$`Température minimale MM365`,varSelec816MM365$`Température moyenne MM365`,varSelec816MM365$`Température maximale MM365`,
                                            varSelec816MM365$`Régression températures min`,varSelec816MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_816MM365, {
        varSelec816MM365$`Température minimale MM365` = input$Teau_min_816MM365
    })
    
    observeEvent(input$Teau_moy_816MM365, {
        varSelec816MM365$`Température moyenne MM365` = input$Teau_moy_816MM365
    })
    
    observeEvent(input$Teau_max_816MM365, {
        varSelec816MM365$`Température maximale MM365` = input$Teau_max_816MM365
    })
    
    observeEvent(input$Teau_min_816reg365, {
        varSelec816MM365$`Régression températures min` = input$Teau_min_816reg365
    })
    observeEvent(input$Teau_max_816reg365, {
        varSelec816MM365$`Régression températures max` = input$Teau_max_816reg365
    })
    
    # ------------------------------------------------------------ #
    ##########################################
    # Sélune
    ##########################################

    
    # Températures enregistrées\npar les différentes sondes
    # ------------------------------------------------------------ #
    
    # Sonde 824
    
    # Données moyenne journalière + MM7
    varSelec824 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde824MM7 <- renderDygraph({
        if(varSelec824$`Température minimale` == FALSE & 
           varSelec824$`Température moyenne`== FALSE &
           varSelec824$`Température maximale` == FALSE & 
           varSelec824$`Température minimale MM7` == FALSE & 
           varSelec824$`Température maximale MM7` == FALSE & 
           varSelec824$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==824),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==824),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde824a[,c(varSelec824$`Température minimale`,varSelec824$`Température moyenne`,varSelec824$`Température maximale`,
                                            varSelec824$`Température minimale MM7`,varSelec824$`Température moyenne MM7`,varSelec824$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_824, {
        varSelec824$`Température minimale` = input$Teau_min_824
    })
    
    observeEvent(input$Teau_moy_824, {
        varSelec824$`Température moyenne` = input$Teau_moy_824
    })
    
    observeEvent(input$Teau_max_824, {
        varSelec824$`Température maximale` = input$Teau_max_824
    })
    
    observeEvent(input$Teau_min_824MM7, {
        varSelec824$`Température minimale MM7` = input$Teau_min_824MM7
    })
    observeEvent(input$Teau_moy_824MM7, {
        varSelec824$`Température moyenne MM7` = input$Teau_moy_824MM7
    })
    observeEvent(input$Teau_max_824MM7, {
        varSelec824$`Température maximale MM7` = input$Teau_max_824MM7
    })
    
    # Sonde 821
    
    # Données moyenne journalière + MM7
    varSelec821 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde821MM7 <- renderDygraph({
        if(varSelec821$`Température minimale` == FALSE & 
           varSelec821$`Température moyenne`== FALSE &
           varSelec821$`Température maximale` == FALSE & 
           varSelec821$`Température minimale MM7` == FALSE & 
           varSelec821$`Température maximale MM7` == FALSE & 
           varSelec821$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==821),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==821),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde821a[,c(varSelec821$`Température minimale`,varSelec821$`Température moyenne`,varSelec821$`Température maximale`,
                                            varSelec821$`Température minimale MM7`,varSelec821$`Température moyenne MM7`,varSelec821$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_821, {
        varSelec821$`Température minimale` = input$Teau_min_821
    })
    
    observeEvent(input$Teau_moy_821, {
        varSelec821$`Température moyenne` = input$Teau_moy_821
    })
    
    observeEvent(input$Teau_max_821, {
        varSelec821$`Température maximale` = input$Teau_max_821
    })
    
    observeEvent(input$Teau_min_821MM7, {
        varSelec821$`Température minimale MM7` = input$Teau_min_821MM7
    })
    observeEvent(input$Teau_moy_821MM7, {
        varSelec821$`Température moyenne MM7` = input$Teau_moy_821MM7
    })
    observeEvent(input$Teau_max_821MM7, {
        varSelec821$`Température maximale MM7` = input$Teau_max_821MM7
    })
    
    
    
    # Sonde 822
    
    # Données moyenne journalière + MM7
    varSelec822 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde822MM7 <- renderDygraph({
        if(varSelec822$`Température minimale` == FALSE & 
           varSelec822$`Température moyenne`== FALSE &
           varSelec822$`Température maximale` == FALSE & 
           varSelec822$`Température minimale MM7` == FALSE & 
           varSelec822$`Température maximale MM7` == FALSE & 
           varSelec822$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==822),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==822),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde822a[,c(varSelec822$`Température minimale`,varSelec822$`Température moyenne`,varSelec822$`Température maximale`,
                                            varSelec822$`Température minimale MM7`,varSelec822$`Température moyenne MM7`,varSelec822$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_822, {
        varSelec822$`Température minimale` = input$Teau_min_822
    })
    
    observeEvent(input$Teau_moy_822, {
        varSelec822$`Température moyenne` = input$Teau_moy_822
    })
    
    observeEvent(input$Teau_max_822, {
        varSelec822$`Température maximale` = input$Teau_max_822
    })
    
    observeEvent(input$Teau_min_822MM7, {
        varSelec822$`Température minimale MM7` = input$Teau_min_822MM7
    })
    observeEvent(input$Teau_moy_822MM7, {
        varSelec822$`Température moyenne MM7` = input$Teau_moy_822MM7
    })
    observeEvent(input$Teau_max_822MM7, {
        varSelec822$`Température maximale MM7` = input$Teau_max_822MM7
    })
    
    # Sonde 820
    
    # Données moyenne journalière + MM7
    varSelec820 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde820MM7 <- renderDygraph({
        if(varSelec820$`Température minimale` == FALSE & 
           varSelec820$`Température moyenne`== FALSE &
           varSelec820$`Température maximale` == FALSE & 
           varSelec820$`Température minimale MM7` == FALSE & 
           varSelec820$`Température maximale MM7` == FALSE & 
           varSelec820$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==820),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==820),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde820a[,c(varSelec820$`Température minimale`,varSelec820$`Température moyenne`,varSelec820$`Température maximale`,
                                            varSelec820$`Température minimale MM7`,varSelec820$`Température moyenne MM7`,varSelec820$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_820, {
        varSelec820$`Température minimale` = input$Teau_min_820
    })
    
    observeEvent(input$Teau_moy_820, {
        varSelec820$`Température moyenne` = input$Teau_moy_820
    })
    
    observeEvent(input$Teau_max_820, {
        varSelec820$`Température maximale` = input$Teau_max_820
    })
    
    observeEvent(input$Teau_min_820MM7, {
        varSelec820$`Température minimale MM7` = input$Teau_min_820MM7
    })
    observeEvent(input$Teau_moy_820MM7, {
        varSelec820$`Température moyenne MM7` = input$Teau_moy_820MM7
    })
    observeEvent(input$Teau_max_820MM7, {
        varSelec820$`Température maximale MM7` = input$Teau_max_820MM7
    })
    
    
    # Sonde 823
    
    # Données moyenne journalière + MM7
    varSelec823 <- reactiveValues(
        `Température minimale` = F,
        `Température moyenne` = T,
        `Température maximale` = F,
        `Température minimale MM7` = F,
        `Température moyenne MM7` = T,
        `Température maximale MM7` = F
    )
    
    output$Sonde823MM7 <- renderDygraph({
        if(varSelec823$`Température minimale` == FALSE & 
           varSelec823$`Température moyenne`== FALSE &
           varSelec823$`Température maximale` == FALSE & 
           varSelec823$`Température minimale MM7` == FALSE & 
           varSelec823$`Température maximale MM7` == FALSE & 
           varSelec823$`Température moyenne MM7` == FALSE
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==823),]$`Température minimale`)),
                            order.by = db2[which(db2$id_sonde==823),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde823a[,c(varSelec823$`Température minimale`,varSelec823$`Température moyenne`,varSelec823$`Température maximale`,
                                            varSelec823$`Température minimale MM7`,varSelec823$`Température moyenne MM7`,varSelec823$`Température maximale MM7`)]
        }
        
        
        
        dygraph(serie_xts, main = "Température (en °C)")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_823, {
        varSelec823$`Température minimale` = input$Teau_min_823
    })
    
    observeEvent(input$Teau_moy_823, {
        varSelec823$`Température moyenne` = input$Teau_moy_823
    })
    
    observeEvent(input$Teau_max_823, {
        varSelec823$`Température maximale` = input$Teau_max_823
    })
    
    observeEvent(input$Teau_min_823MM7, {
        varSelec823$`Température minimale MM7` = input$Teau_min_823MM7
    })
    observeEvent(input$Teau_moy_823MM7, {
        varSelec823$`Température moyenne MM7` = input$Teau_moy_823MM7
    })
    observeEvent(input$Teau_max_823MM7, {
        varSelec823$`Température maximale MM7` = input$Teau_max_823MM7
    })
    
    
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 30 jours
    # ------------------------------------------------------------ #
    # Sonde 824
    
    # Données moyenne journalière + MM7
    varSelec824MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde824MM30 <- renderDygraph({
        if(varSelec824MM30$`Température minimale MM30` == FALSE & 
           varSelec824MM30$`Température moyenne MM30`== FALSE &
           varSelec824MM30$`Température maximale MM30` == FALSE & 
           varSelec824MM30$`Régression températures min` == FALSE & 
           varSelec824MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==824),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==824),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde824b[,c(varSelec824MM30$`Température minimale MM30`,varSelec824MM30$`Température moyenne MM30`,varSelec824MM30$`Température maximale MM30`,
                                            varSelec824MM30$`Régression températures min`,varSelec824MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_824MM30, {
        varSelec824MM30$`Température minimale MM30` = input$Teau_min_824MM30
    })
    
    observeEvent(input$Teau_moy_824MM30, {
        varSelec824MM30$`Température moyenne MM30` = input$Teau_moy_824MM30
    })
    
    observeEvent(input$Teau_max_824MM30, {
        varSelec824MM30$`Température maximale MM30` = input$Teau_max_824MM30
    })
    
    observeEvent(input$Teau_min_824reg30, {
        varSelec824MM30$`Régression températures min` = input$Teau_min_824reg30
    })
    observeEvent(input$Teau_max_824reg30, {
        varSelec824MM30$`Régression températures max` = input$Teau_max_824reg30
    })
    
    
    
    # Sonde 821
    
    # Données moyenne journalière + MM7
    varSelec821MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde821MM30 <- renderDygraph({
        if(varSelec821MM30$`Température minimale MM30` == FALSE & 
           varSelec821MM30$`Température moyenne MM30`== FALSE &
           varSelec821MM30$`Température maximale MM30` == FALSE & 
           varSelec821MM30$`Régression températures min` == FALSE & 
           varSelec821MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==821),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==821),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde821b[,c(varSelec821MM30$`Température minimale MM30`,varSelec821MM30$`Température moyenne MM30`,varSelec821MM30$`Température maximale MM30`,
                                            varSelec821MM30$`Régression températures min`,varSelec821MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_821MM30, {
        varSelec821MM30$`Température minimale MM30` = input$Teau_min_821MM30
    })
    
    observeEvent(input$Teau_moy_821MM30, {
        varSelec821MM30$`Température moyenne MM30` = input$Teau_moy_821MM30
    })
    
    observeEvent(input$Teau_max_821MM30, {
        varSelec821MM30$`Température maximale MM30` = input$Teau_max_821MM30
    })
    
    observeEvent(input$Teau_min_821reg30, {
        varSelec821MM30$`Régression températures min` = input$Teau_min_821reg30
    })
    observeEvent(input$Teau_max_821reg30, {
        varSelec821MM30$`Régression températures max` = input$Teau_max_821reg30
    })
    
    # Sonde 822
    
    # Données moyenne journalière + MM7
    varSelec822MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde822MM30 <- renderDygraph({
        if(varSelec822MM30$`Température minimale MM30` == FALSE & 
           varSelec822MM30$`Température moyenne MM30`== FALSE &
           varSelec822MM30$`Température maximale MM30` == FALSE & 
           varSelec822MM30$`Régression températures min` == FALSE & 
           varSelec822MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==822),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==822),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde822b[,c(varSelec822MM30$`Température minimale MM30`,varSelec822MM30$`Température moyenne MM30`,varSelec822MM30$`Température maximale MM30`,
                                            varSelec822MM30$`Régression températures min`,varSelec822MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_822MM30, {
        varSelec822MM30$`Température minimale MM30` = input$Teau_min_822MM30
    })
    
    observeEvent(input$Teau_moy_822MM30, {
        varSelec822MM30$`Température moyenne MM30` = input$Teau_moy_822MM30
    })
    
    observeEvent(input$Teau_max_822MM30, {
        varSelec822MM30$`Température maximale MM30` = input$Teau_max_822MM30
    })
    
    observeEvent(input$Teau_min_822reg30, {
        varSelec822MM30$`Régression températures min` = input$Teau_min_822reg30
    })
    observeEvent(input$Teau_max_822reg30, {
        varSelec822MM30$`Régression températures max` = input$Teau_max_822reg30
    })
    
    # Sonde 820
    
    # Données moyenne journalière + MM7
    varSelec820MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde820MM30 <- renderDygraph({
        if(varSelec820MM30$`Température minimale MM30` == FALSE & 
           varSelec820MM30$`Température moyenne MM30`== FALSE &
           varSelec820MM30$`Température maximale MM30` == FALSE & 
           varSelec820MM30$`Régression températures min` == FALSE & 
           varSelec820MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==820),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==820),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde820b[,c(varSelec820MM30$`Température minimale MM30`,varSelec820MM30$`Température moyenne MM30`,varSelec820MM30$`Température maximale MM30`,
                                            varSelec820MM30$`Régression températures min`,varSelec820MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_820MM30, {
        varSelec820MM30$`Température minimale MM30` = input$Teau_min_820MM30
    })
    
    observeEvent(input$Teau_moy_820MM30, {
        varSelec820MM30$`Température moyenne MM30` = input$Teau_moy_820MM30
    })
    
    observeEvent(input$Teau_max_820MM30, {
        varSelec820MM30$`Température maximale MM30` = input$Teau_max_820MM30
    })
    
    observeEvent(input$Teau_min_820reg30, {
        varSelec820MM30$`Régression températures min` = input$Teau_min_820reg30
    })
    observeEvent(input$Teau_max_820reg30, {
        varSelec820MM30$`Régression températures max` = input$Teau_max_820reg30
    })
    
    
    # Sonde 823
    
    # Données moyenne journalière + MM7
    varSelec823MM30 <- reactiveValues(
        `Température minimale MM30` = T,
        `Température moyenne MM30` = T,
        `Température maximale MM30` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde823MM30 <- renderDygraph({
        if(varSelec823MM30$`Température minimale MM30` == FALSE & 
           varSelec823MM30$`Température moyenne MM30`== FALSE &
           varSelec823MM30$`Température maximale MM30` == FALSE & 
           varSelec823MM30$`Régression températures min` == FALSE & 
           varSelec823MM30$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==823),]$`Température minimale MM30`)),
                            order.by = db2[which(db2$id_sonde==823),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde823b[,c(varSelec823MM30$`Température minimale MM30`,varSelec823MM30$`Température moyenne MM30`,varSelec823MM30$`Température maximale MM30`,
                                            varSelec823MM30$`Régression températures min`,varSelec823MM30$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(0, 25)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_823MM30, {
        varSelec823MM30$`Température minimale MM30` = input$Teau_min_823MM30
    })
    
    observeEvent(input$Teau_moy_823MM30, {
        varSelec823MM30$`Température moyenne MM30` = input$Teau_moy_823MM30
    })
    
    observeEvent(input$Teau_max_823MM30, {
        varSelec823MM30$`Température maximale MM30` = input$Teau_max_823MM30
    })
    
    observeEvent(input$Teau_min_823reg30, {
        varSelec823MM30$`Régression températures min` = input$Teau_min_823reg30
    })
    observeEvent(input$Teau_max_823reg30, {
        varSelec823MM30$`Régression températures max` = input$Teau_max_823reg30
    })
    
    # ------------------------------------------------------------ #
    
    # ------------------------------------------------------------ #
    
    # Températures lissées sur 365 jours
    # ------------------------------------------------------------ #
    # Sonde 824
    
    # Données moyenne journalière + MM7
    varSelec824MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde824MM365 <- renderDygraph({
        if(varSelec824MM365$`Température minimale MM365` == FALSE & 
           varSelec824MM365$`Température moyenne MM365`== FALSE &
           varSelec824MM365$`Température maximale MM365` == FALSE & 
           varSelec824MM365$`Régression températures min` == FALSE & 
           varSelec824MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==824),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==824),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde824c[,c(varSelec824MM365$`Température minimale MM365`,varSelec824MM365$`Température moyenne MM365`,varSelec824MM365$`Température maximale MM365`,
                                            varSelec824MM365$`Régression températures min`,varSelec824MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_824MM365, {
        varSelec824MM365$`Température minimale MM365` = input$Teau_min_824MM365
    })
    
    observeEvent(input$Teau_moy_824MM365, {
        varSelec824MM365$`Température moyenne MM365` = input$Teau_moy_824MM365
    })
    
    observeEvent(input$Teau_max_824MM365, {
        varSelec824MM365$`Température maximale MM365` = input$Teau_max_824MM365
    })
    
    observeEvent(input$Teau_min_824reg365, {
        varSelec824MM365$`Régression températures min` = input$Teau_min_824reg365
    })
    observeEvent(input$Teau_max_824reg365, {
        varSelec824MM365$`Régression températures max` = input$Teau_max_824reg365
    })
    
    
    
    # Sonde 821
    
    # Données moyenne journalière + MM7
    varSelec821MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde821MM365 <- renderDygraph({
        if(varSelec821MM365$`Température minimale MM365` == FALSE & 
           varSelec821MM365$`Température moyenne MM365`== FALSE &
           varSelec821MM365$`Température maximale MM365` == FALSE & 
           varSelec821MM365$`Régression températures min` == FALSE & 
           varSelec821MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==821),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==821),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde821c[,c(varSelec821MM365$`Température minimale MM365`,varSelec821MM365$`Température moyenne MM365`,varSelec821MM365$`Température maximale MM365`,
                                            varSelec821MM365$`Régression températures min`,varSelec821MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_821MM365, {
        varSelec821MM365$`Température minimale MM365` = input$Teau_min_821MM365
    })
    
    observeEvent(input$Teau_moy_821MM365, {
        varSelec821MM365$`Température moyenne MM365` = input$Teau_moy_821MM365
    })
    
    observeEvent(input$Teau_max_821MM365, {
        varSelec821MM365$`Température maximale MM365` = input$Teau_max_821MM365
    })
    
    observeEvent(input$Teau_min_821reg365, {
        varSelec821MM365$`Régression températures min` = input$Teau_min_821reg365
    })
    observeEvent(input$Teau_max_821reg365, {
        varSelec821MM365$`Régression températures max` = input$Teau_max_821reg365
    })
    
    # Sonde 822
    
    # Données moyenne journalière + MM7
    varSelec822MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde822MM365 <- renderDygraph({
        if(varSelec822MM365$`Température minimale MM365` == FALSE & 
           varSelec822MM365$`Température moyenne MM365`== FALSE &
           varSelec822MM365$`Température maximale MM365` == FALSE & 
           varSelec822MM365$`Régression températures min` == FALSE & 
           varSelec822MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==822),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==822),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde822c[,c(varSelec822MM365$`Température minimale MM365`,varSelec822MM365$`Température moyenne MM365`,varSelec822MM365$`Température maximale MM365`,
                                            varSelec822MM365$`Régression températures min`,varSelec822MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_822MM365, {
        varSelec822MM365$`Température minimale MM365` = input$Teau_min_822MM365
    })
    
    observeEvent(input$Teau_moy_822MM365, {
        varSelec822MM365$`Température moyenne MM365` = input$Teau_moy_822MM365
    })
    
    observeEvent(input$Teau_max_822MM365, {
        varSelec822MM365$`Température maximale MM365` = input$Teau_max_822MM365
    })
    
    observeEvent(input$Teau_min_822reg365, {
        varSelec822MM365$`Régression températures min` = input$Teau_min_822reg365
    })
    observeEvent(input$Teau_max_822reg365, {
        varSelec822MM365$`Régression températures max` = input$Teau_max_822reg365
    })
    
    # Sonde 820
    
    # Données moyenne journalière + MM7
    varSelec820MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde820MM365 <- renderDygraph({
        if(varSelec820MM365$`Température minimale MM365` == FALSE & 
           varSelec820MM365$`Température moyenne MM365`== FALSE &
           varSelec820MM365$`Température maximale MM365` == FALSE & 
           varSelec820MM365$`Régression températures min` == FALSE & 
           varSelec820MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==820),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==820),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde820c[,c(varSelec820MM365$`Température minimale MM365`,varSelec820MM365$`Température moyenne MM365`,varSelec820MM365$`Température maximale MM365`,
                                            varSelec820MM365$`Régression températures min`,varSelec820MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_820MM365, {
        varSelec820MM365$`Température minimale MM365` = input$Teau_min_820MM365
    })
    
    observeEvent(input$Teau_moy_820MM365, {
        varSelec820MM365$`Température moyenne MM365` = input$Teau_moy_820MM365
    })
    
    observeEvent(input$Teau_max_820MM365, {
        varSelec820MM365$`Température maximale MM365` = input$Teau_max_820MM365
    })
    
    observeEvent(input$Teau_min_820reg365, {
        varSelec820MM365$`Régression températures min` = input$Teau_min_820reg365
    })
    observeEvent(input$Teau_max_820reg365, {
        varSelec820MM365$`Régression températures max` = input$Teau_max_820reg365
    })
    
    # Sonde 823
    
    # Données moyenne journalière + MM7
    varSelec823MM365 <- reactiveValues(
        `Température minimale MM365` = T,
        `Température moyenne MM365` = T,
        `Température maximale MM365` = T,
        `Régression températures min` = F,
        `Régression températures max` = F
    )
    
    output$Sonde823MM365 <- renderDygraph({
        if(varSelec823MM365$`Température minimale MM365` == FALSE & 
           varSelec823MM365$`Température moyenne MM365`== FALSE &
           varSelec823MM365$`Température maximale MM365` == FALSE & 
           varSelec823MM365$`Régression températures min` == FALSE & 
           varSelec823MM365$`Régression températures max` == FALSE 
        )
        {
            serie_xts = xts(x = rep(NA, length(db2[which(db2$id_sonde==823),]$`Température minimale MM365`)),
                            order.by = db2[which(db2$id_sonde==823),]$date
            )
        }
        else{
            serie_xts = db_xts_sonde823c[,c(varSelec823MM365$`Température minimale MM365`,varSelec823MM365$`Température moyenne MM365`,varSelec823MM365$`Température maximale MM365`,
                                            varSelec823MM365$`Régression températures min`,varSelec823MM365$`Régression températures max`)]
        }
        
        
        
        dygraph(serie_xts, main = "")%>%
            dyAxis("y", label = "Température (en °C)", valueRange = c(5, 15)) %>%
            dyRangeSelector() %>%       dyLegend(show = "follow")
    })
    
    observeEvent(input$Teau_min_823MM365, {
        varSelec823MM365$`Température minimale MM365` = input$Teau_min_823MM365
    })
    
    observeEvent(input$Teau_moy_823MM365, {
        varSelec823MM365$`Température moyenne MM365` = input$Teau_moy_823MM365
    })
    
    observeEvent(input$Teau_max_823MM365, {
        varSelec823MM365$`Température maximale MM365` = input$Teau_max_823MM365
    })
    
    observeEvent(input$Teau_min_823reg365, {
        varSelec823MM365$`Régression températures min` = input$Teau_min_823reg365
    })
    observeEvent(input$Teau_max_823reg365, {
        varSelec823MM365$`Régression températures max` = input$Teau_max_823reg365
    })
    
    # ------------------------------------------------------------ #
    
    # ------------------------------------------------------------ #
    
    ##############################################################
    # fiche synthese par sonde
    ##############################################################
    # ------------------------------------------------------------ #
    
    sonde_synthese_reactive <- reactiveValues(
        id_sonde_char = "817",
        id_sonde_num = 817,
        label_sonde = "Orne T1",
        sonde_lat = "48.90405",
        sonde_lng = "-0.45678",
        sonde_db = as.data.frame(db[db$id_sonde==817,]),
        sonde_deb = "2011-06-17",
        sonde_fin = "2021-10-19",
        sonde_nb_obs = 45330,
        
        sonde_debit = "0",
        sonde_dist_source = "0",
        sonde_alt = "1"
    )
    
    
    observeEvent(input$choix_sondes, {
        id_sonde_synthese = as.numeric(input$choix_sondes)
        sonde_info = db_sonde_synthese[which(db_sonde_synthese==id_sonde_synthese),]
        
        sonde_synthese_reactive$id_sonde_num = id_sonde_synthese
        sonde_synthese_reactive$id_sonde_char = input$choix_sondes
        sonde_synthese_reactive$label_sonde = sonde_info$label
        
        sonde_synthese_reactive$sonde_lat = sonde_info$latitude
        sonde_synthese_reactive$sonde_lng = sonde_info$longitude
        
        
        sonde_synthese_reactive$sonde_db = as.data.frame(db[db$id_sonde==id_sonde_synthese,])
        
        sonde_synthese_reactive$sonde_deb = sonde_info$date_deb
        sonde_synthese_reactive$sonde_fin = sonde_info$date_fin
        sonde_synthese_reactive$sonde_nb_obs = sonde_info$nb_obs
        
        
        
        
    },ignoreInit = TRUE)
    
    observeEvent(input$return_to_sub_menu_map_sonde, {
        updateNavbarPage(session=session, inputId = "menu_principal", selected = "sub_menu_sondes")
    })
    
    
    output$sonde_synthese_map <- renderLeaflet({
        pos = db_temp[which(db_temp$id_sonde == sonde_synthese_reactive$id_sonde_num),]$pos
        leaflet() %>%
            addTiles() %>%
            addMarkers(lng = as.numeric(sonde_synthese_reactive$sonde_lng),
                       lat = as.numeric(sonde_synthese_reactive$sonde_lat), group = "sondes_synthese") %>%
            addPolylines(data = coursEau2@lines[[pos]]@Lines[[1]]@coords, weight = 2, opacity = 0.9, color = "blue")
    })
    
    # histogramme fréquence des température (bi-horaire)
    output$freq_sonde_synthese <- renderPlotly({
        gghist <- sonde_synthese_reactive$sonde_db %>%
            ggplot(aes(x=Teau))+
            geom_histogram(fill="#B2DF8A", colour="white", binwidth = .8)+
            theme_minimal()+
            theme(legend.title = element_blank())
        
        gghist <- ggplotly(gghist)
    })
    
    output$tableau_stats_sonde_synthese <- renderTable({
        sonde_table = sonde_synthese_reactive$sonde_db %>%
            group_by(id_sonde) %>%
            mutate(Min=min(Teau),
                   t25 = quantile(Teau,.25),
                   Mediane = median(Teau),
                   Moyenne = mean(Teau),
                   sd = sd(Teau),
                   t75 = quantile(Teau,.75),
                   Max = max(Teau))
        
        sonde_table = sonde_table[1, 5:ncol(sonde_table)]
        sonde_table
        
    })
    
    # representation graphique de la serie
    output$graphe_sonde_synthese <- renderDygraph({
        df_sonde = sonde_synthese_reactive$sonde_db
        sonde_data = xts(df_sonde$Teau, order.by=df_sonde$t)
        dygraph(sonde_data, main = paste0(sonde_synthese_reactive$label_sonde))%>%
            dyAxis("y", label = "Température (°c)", valueRange = c(min(db$Teau)-1, max(db$Teau)+1)) %>%
            dyAxis("x", drawGrid = F, label = "Date (relevé bi-horaire)") %>%
            dySeries("V1", label = "Température relevée") %>%
            #dyRangeSelector() %>%
            dyLegend(width = 170)#, show="follow")
        
    })
    
    output$perio_sonde_synthese <- renderPlot({
        perio <- periodogram(log(db2[which(db2$id_sonde==sonde_synthese_reactive$id_sonde_num),]$`Température moyenne`))
    })
    
    
    # textes
    output$id_lab_txt <- renderText({
        paste0(sonde_synthese_reactive$label_sonde," : ","sondes n°",sonde_synthese_reactive$id_sonde_char)
    })
    
    output$debit_txt <- renderText({
        paste0("Débit : ", sonde_synthese_reactive$sonde_debit)
    })
    
    output$dist_source_txt <- renderText({
        paste0("Distance à la source : ", sonde_synthese_reactive$sonde_dist_source, " km")
    })
    
    output$long_lat_txt <- renderText({
        paste0("Longitude : ", sonde_synthese_reactive$sonde_lng,
               ". Latitude : ", sonde_synthese_reactive$sonde_lat,
               ". Altitude : ", sonde_synthese_reactive$sonde_alt,".")
    })
    
    output$deb_txt <- renderText({
        paste0("Première observation le ", sonde_synthese_reactive$sonde_deb,".")
    })
    
    output$fin_txt <- renderText({
        paste0("Dernière observation le ", sonde_synthese_reactive$sonde_fin,".")
    })
    
    output$nb_obs_txt <- renderText({
        paste0(as.character(sonde_synthese_reactive$sonde_nb_obs), " observations.")
    })
    
    
    
    
    
    
    # ------------------------------------------------------------ #
    
    
    
    
    
    
    ##############################################################
    # comparaison sondes
    ##############################################################
    # ------------------------------------------------------------ #
    sonde_comp_reactive <- reactiveValues(
        choix_sondes = c("817", "818", "819")
    )
    
    df_xts_comp_teau <- reactive({
        df_xts_choix = data.frame(date = db_xts_comp_teau_moy$date)
        
        for(c in sonde_comp_reactive$choix_sondes){
            df_xts_choix[[c]] = db_xts_comp_teau_moy[[c]]
        }
        
        label_choix_sondes = c("date")
        for(c in as.numeric(sonde_comp_reactive$choix_sondes)){
            label_choix_sondes = c(label_choix_sondes, db_sonde_synthese[which(db_sonde_synthese==c),]$label)
        }
        
        names(df_xts_choix) = label_choix_sondes
        
        df_xts_choix = xts(df_xts_choix[,-1], order.by=df_xts_choix$date)
        
        df_xts_choix
    })
    
    
    
    
    df_xts_comp_MM30 <- reactive({
        df_xts_choix = data.frame(date = db_xts_comp_teau_MM30$date)
        
        for(c in sonde_comp_reactive$choix_sondes){
            df_xts_choix[[c]] = db_xts_comp_teau_MM30[[c]]
        }
        
        label_choix_sondes = c("date")
        for(c in as.numeric(sonde_comp_reactive$choix_sondes)){
            label_choix_sondes = c(label_choix_sondes, db_sonde_synthese[which(db_sonde_synthese==c),]$label)
        }
        
        names(df_xts_choix) = label_choix_sondes
        
        df_xts_choix = xts(df_xts_choix[,-1], order.by=df_xts_choix$date)
        
        df_xts_choix
    })
    
    
    df_xts_comp_MM365 <- reactive({
        df_xts_choix = data.frame(date = db_xts_comp_teau_MM365$date)
        
        for(c in sonde_comp_reactive$choix_sondes){
            df_xts_choix[[c]] = db_xts_comp_teau_MM365[[c]]
        }
        
        
        label_choix_sondes = c("date")
        for(c in as.numeric(sonde_comp_reactive$choix_sondes)){
            label_choix_sondes = c(label_choix_sondes, db_sonde_synthese[which(db_sonde_synthese==c),]$label)
        }
        
        names(df_xts_choix) = label_choix_sondes
        
        df_xts_choix = xts(df_xts_choix[,-1], order.by=df_xts_choix$date)
        
        df_xts_choix
    })
    
    df_xts_comp_bih <- reactive({
        df_xts_choix = data.frame(t = db_xts_comp_teau_bih$t)
        
        for(c in sonde_comp_reactive$choix_sondes){
            df_xts_choix[[c]] = db_xts_comp_teau_bih[[c]]
        }
        
        label_choix_sondes = c("t")
        for(c in as.numeric(sonde_comp_reactive$choix_sondes)){
            label_choix_sondes = c(label_choix_sondes, db_sonde_synthese[which(db_sonde_synthese==c),]$label)
        }
        
        names(df_xts_choix) = label_choix_sondes
        
        df_xts_choix = xts(df_xts_choix[,-1], order.by=df_xts_choix$t)
        
        df_xts_choix
    })
    
    
    
    
    
    observeEvent(input$choix_comparaison, {
        sonde_comp_reactive$choix_sondes = input$choix_comparaison
    },ignoreInit = TRUE)
    
    
    
    
    output$comp_Teau <- renderDygraph({
        if(length(sonde_comp_reactive$choix_sondes)==1){
            dygraph(df_xts_comp_teau(), main="Comparaison des températures moyennes journalières", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date") %>%
                dyRangeSelector() %>%
                dySeries("V1", label=db_sonde_synthese[which(db_sonde_synthese==as.numeric(sonde_comp_reactive$choix_sondes)),]$label)
        }
        else{
            dygraph(df_xts_comp_teau(), main="Comparaison des températures moyennes journalières", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date") %>%
                dyRangeSelector()
        }
    })
    
    
    output$comp_MM30 <- renderDygraph({
        if(length(sonde_comp_reactive$choix_sondes)==1){
            dygraph(df_xts_comp_MM30(), main="Comparaison des températures moyennes sur 30 jours", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date") %>%
                dyRangeSelector() %>%
                dySeries("V1", label=db_sonde_synthese[which(db_sonde_synthese==as.numeric(sonde_comp_reactive$choix_sondes)),]$label)
        }
        else{
            dygraph(df_xts_comp_MM30(), main="Comparaison des températures moyennes sur 30 jours", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date") %>%
                dyRangeSelector()
        }
    })
    
    output$comp_MM365 <- renderDygraph({
        if(length(sonde_comp_reactive$choix_sondes)==1){
            dygraph(df_xts_comp_MM365(), main="Comparaison des températures moyennes sur 365 jours", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date") %>%
                dyRangeSelector() %>%
                dySeries("V1", label=db_sonde_synthese[which(db_sonde_synthese==as.numeric(sonde_comp_reactive$choix_sondes)),]$label)
        }
        else{
            dygraph(df_xts_comp_MM365(), main="Comparaison des températures moyennes sur 365 jours", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date") %>%
                dyRangeSelector()
        }
    })
    
    
    output$comp_bih <- renderDygraph({
        if(length(sonde_comp_reactive$choix_sondes)==1){
            dygraph(df_xts_comp_bih(),main="Comparaison des températures relevées", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date (relevé bi-horaire)") %>%
                dyRangeSelector() %>%
                dySeries("V1", label=db_sonde_synthese[which(db_sonde_synthese==as.numeric(sonde_comp_reactive$choix_sondes)),]$label)
        }
        else{
            dygraph(df_xts_comp_bih(), main="Comparaison des températures relevées", group="comparison")%>%
                dyAxis("y", label = "Température (°c)") %>%
                dyAxis("x", label = "Date (relevé bi-horaire)") %>%
                dyRangeSelector()
        }
    })
    # Fin onglet comparaison
    # ------------------------------------------------------------ #
    
    
    
    
    
    # ############################################################ #
    # FIN ANALYSE DES TEMPÉRATURES
    # ############################################################ #
    
    
    
    
    
    
    
    
    
    
}) # Fin shinyServer
