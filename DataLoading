# ####################
# Libraries
#####################

if(!require(leaflet)){
  install.packages("leaflet")
  library(leaflet)
}
if(!require(dplyr)){
  install.packages("dplyr")
  library(dplyr)
}
if(!require(sf)){
  install.packages("sf")
  library(sf)
}
if(!require(leafpop)){
  install.packages("leafpop")
  library(leafpop)
}
if(!require(zoo)){
  install.packages("zoo")
  library(zoo)
}
if(!require(lubridate)){
  install.packages("lubridate")
  library(lubridate)
}
if(!require(shiny)){
  install.packages("shiny")
  library(shiny)
}
if(!require(htmlwidgets)){
  install.packages("htmlwidgets")
  library(htmlwidgets)
}
if(!require(dygraphs)){
  install.packages("dygraphs")
  library(dygraphs)
}
if(!require(devtools)){
  install.packages("devtools")
  library(devtools)
}
if(!require(xts)){
  install.packages("xts")
  library(xts)
}
if(!require(maptools)){
  install.packages("maptools")
  library(maptools)
}
if(!require(shinyjs)){
  install.packages("shinyjs")
  library(shinyjs)
}
if(!require(shinydashboard)){
  install.packages("shinydashboard")
  library(shinydashboard)
}
if(!require(reactable)){
  install.packages("reactable")
  library(reactable)
}

if(!require(plotly)){
  install.packages("plotly")
  library(plotly)
}

if(!require(rstatix)){
  install.packages("rstatix")
  library(rstatix)
}

if(!require(tidyr)){
  install.packages("tidyr")
  library(tidyr)
}

if(!require(openxlsx)){
  install.packages("openxlsx")
  library(openxlsx)
}
if(!require(ggpubr)){
  install.packages("ggpubr")
  library(ggpubr)
}
if(!require(TSA)){
  install.packages("TSA")
  library(TSA)
}
if(!require(dashboardthemes)){
  install.packages("dashboardthemes")
  library(dashboardthemes)
}
if(!require(flamingos)){
  install.packages("flamingos")
  library(flamingos)
}
#################
# CHemin d'accès
#################



#Intégrer le chemin d'accès au projet

path="D:/Users/Desktop/Cours/M2stat/Projet" # path Lucie
#path = "/Users/julien/Desktop/projetM2/dashboard_propre" # path Julien

setwd(path)

#######################################################################################
# COMENTAIRES ET CODE PROVISOIRE
#######################################################################################

# mettre cette base dans le KMLs.RData à la place de l'autre fichier kml sur les sondes DREAL
# c'est avec le nouveau fichier kml que j'envoie
#SondesDreal2 = rgdal::readOGR("D:/Users/Desktop/Cours/M2stat/Projet/KLM/sondes_dreal_id.kml", "Points")

# aussi j'ai des erreurs sur la dernière base dbMM365, quand
# dbMM365 <- dbMM[,c("id_sonde", "date","TeauMeanMM365")]
# je crois qu'il n'y a pas de colonne date dans dbMM


# aussi je crois qu'on a pas de données pour plusieurs sondes 
# 826, 814, 148, 147, 829, 103


########################################################################
# Lecture des bases de données nécessaires
########################################################################


# temperature des cours d'eau
load("db.RData")
str(db)
# Documents KML : 
load("KMLs.RData")
# Document cours d'eau
load("coursEau.RData")
# Document comprenant les informations des sondes
db_sonde_synthese <- openxlsx::read.xlsx("Bilan activité sondes T.xlsx",sheet=1,
                                         startRow = 5,colNames=T,rowNames = F)

#######################################################################################
# Mise au point de la base db_sonde_synthese qui contient toutes les infos des sondes
#######################################################################################

db_sonde_synthese <- db_sonde_synthese[,-c(1,6,7,9:ncol(db_sonde_synthese))]

colnames(db_sonde_synthese) <- c("id_sonde","label","latitude","longitude","Altitude")


str(db_sonde_synthese)


for (i in 1:nrow(db_sonde_synthese)){
  if (db_sonde_synthese$id_sonde[i] %in% unique(db$id_sonde))
  {
    db_sonde_synthese$id_sonde[i] = db_sonde_synthese$id_sonde[i] 
  }
  else{db_sonde_synthese$id_sonde[i] = NA}
}

db_sonde_synthese <- db_sonde_synthese[is.na(db_sonde_synthese$id_sonde)==F,]

db_sonde_synthese$id_sonde <- as.factor(db_sonde_synthese$id_sonde)

modif = db %>%
  group_by(id_sonde)%>%
  mutate(nb_obs = length(id_sonde),
         date_debut = min(date),
         date_fin = max(date),
  )

modif = modif[,-c(1,3,4)]
modif = modif[duplicated(modif$id_sonde)==F,]


db_sonde_synthese = merge(db_sonde_synthese,modif, by="id_sonde")

rm(modif)

# ajouter 
#  - altitude
#  - debit
#  - distance à la source
#  - commentaire du tableau
#  - commentaire du graphe


as.character(db_sonde_synthese$id_sonde)


coursEau2 = rgdal::readOGR(paste0(path,"/cours_eau_projet.kml"), "cours_eau_projet")


# ######################################################################################
# Calcul des distances
#######################################################################################

########
# Calcul des tailles de fleuves
########

Taille=vector()
name=vector()
for (i in 1:dim(coursEau2)[1]){
  lat=vector()
  lng=vector()
  latitude=vector()
  longitude=vector()
  d=vector()
  #taille=vector()
  D=vector()
  longitude2=vector()
  latitude2=vector()
  
  Name = coursEau2$Name[i]
 
  coord = coordinates(coursEau2[coursEau2@data$Name == Name,])
  
    lng <- coord[[1]][[1]][,1]
    longitude = coord[[1]][[1]][,1]
    lat <- coord[[1]][[1]][,2]
    latitude=coord[[1]][[1]][,2]
    
    longitude2 = longitude*(pi/180)
    latitude2 = latitude*(pi/180)
    
    for (j in 1:length(latitude)){
      d= (2 * asin( sqrt(
        (sin((latitude2[j]-latitude2[j+1])/2))^2 + cos(latitude2[j])*cos(latitude2[j+1])* ( sin((longitude2[j]-longitude2[j+1])/2)) ^2
        )
      
      ))*6366
     
      D=append(D,d)
    }
    
  taille= sum(D,na.rm=T)
  print(taille)
  Taille = append(Taille,taille)
  name = append(name,Name)

}
Taille



Name=coursEau2@data$Name
Name=as.character(Name)
Name

cbind(Name,Taille)

########
# Distances à la source
########
##########
# BD temp
#########

db_temp = data.frame(id_sonde = db_sonde_synthese$id_sonde, 
                     cours_eau = c("Monne", "Vie", "Taute", "Barge", "Grande Vallee",
                                   "Souleuvre", "See Rousse", "Egrenne", "Durance", "See",
                                   "Berence", "Glanon", "Vieux Ruisseau (Vingt bec)",
                                   "Fontaine au Heron", rep("Odon", 4), rep("Orne", 3),
                                   rep("Selune", 5), rep("Touques", 4)),
                     pos = c(3, 4, 14, 2, 13, 9, 12, 11, 10, 17, 16, 15, 8, 6, 
                             rep(1, 4), rep(7, 3), rep(18, 5), rep(5, 4)))

#Cette base de données te donne la position du cours d'eau dans coursEau2

db_temp[which(db_temp$id_sonde == 830),]$pos

#te renvoie la position de la Touques dans coursEau2 par exemple

coursEau2@lines[[1]]@Lines[[1]]@coords

#Cette ligne te permet de récupérer le cours d'eau à la position i de coursEau2



################################################################################################
# Moyennes mobiles
################################################################################################
db2 =db %>%
  group_by(id_sonde,date)%>%
  mutate(TeauMin = min(Teau),
         TeauMax = max(Teau),
         TeauMed = median(Teau),
         TeauMoy = mean(Teau)
  )


db2 <- db2[,-c(1,3)]
db2 = db2[which(duplicated(db2)==F),]

dbMM = db2 %>%
  group_by(id_sonde)%>%
  mutate(TeauMinMM7 = stats::filter(TeauMin,filter=rep(1/7,7)),
         TeauMinMM30 = stats::filter(TeauMin,filter=c(1/(2*30),rep(1/30,29),1/(2*30))),
         TeauMinMM365 = stats::filter(TeauMin,filter=rep(1/365,365)),
         TeauMaxMM7 = stats::filter(TeauMax,filter=rep(1/7,7)),
         TeauMaxMM30 = stats::filter(TeauMax,filter=c(1/(2*30),rep(1/30,29),1/(2*30))),
         TeauMaxMM365 = stats::filter(TeauMax,filter=rep(1/365,365)),
         TeauMeanMM7 = stats::filter(TeauMoy,filter=rep(1/7,7)),
         TeauMeanMM30 = stats::filter(TeauMoy,filter=c(1/(2*30),rep(1/30,29),1/(2*30))),
         TeauMeanMM365 = stats::filter(TeauMoy,filter=rep(1/365,365)),
         TeauMedMM7 = stats::filter(TeauMed,filter=rep(1/7,7)),
         TeauMedMM30 = stats::filter(TeauMed,filter=c(1/(2*30),rep(1/30,29),1/(2*30))),
         TeauMedMM365 = stats::filter(TeauMed,filter=rep(1/365,365))
         
  )

################################################################################################
# Préférendums thermiques
################################################################################################

###########
# Mise au point des données
###########

db2$limiteTruite <- NA
db2$limiteTruite = ifelse(db2$TeauMoy <= 0.5 | db2$TeauMoy >=  25.5 ,
                          db2$limiteTruite <- "Seuil létal",
                          ifelse( db2$TeauMoy >=  19.5 ,
                                  db2$limiteTruite <- "Seuil critique", 
                                  ifelse( db2$TeauMoy <= 4.5 | db2$TeauMoy >=  16.5 ,
                                          db2$limiteTruite <- "Danger pour juvéniles",   
                                          db2$limiteTruite <- "Préférendum thermique" )
                          ))

db2$limiteTruite <- as.factor(db2$limiteTruite)


db2$limiteBrochet <- NA
db2$limiteBrochet = ifelse(db2$TeauMoy <= 2.5  ,
                          db2$limiteBrochet <- "Seuil létal adulte",
                          ifelse( db2$TeauMoy <=  5.5 ,
                                  db2$limiteBrochet <- "Seuil létal juvéniles", 
                            ifelse( db2$TeauMoy >=  19.5 ,
                                  db2$limiteBrochet <- "Danger pour les embryons", 
                                  ifelse( db2$TeauMoy <= 9.5  ,
                                          db2$limiteBrochet <- "Danger pour juvéniles", 
                                          ifelse( db2$TeauMoy >= 24.5  ,
                                                  db2$limiteBrochet <- "Danger pour les larves",
                                                  ifelse( db2$TeauMoy >= 30.5 ,
                                                          db2$limiteBrochet <- "Seuil létal",
                                                            db2$limiteBrochet <- "Préférendum thermique")
                          )))))

db2$limiteBrochet <- as.factor(db2$limiteBrochet)
db2$limiteR <- "Sans Espèce"

db2 <- db2 %>%
  gather(key="Espece",value="Pref",c(7:9)) %>%
  convert_as_factor(Espece)

db2$An <- year(db2$date)
colnames(db2)[6] = "Température moyenne"

############
# Mise au point du tableau de récap des données pour seuil thermiques
############

db3 = db2
db3$nb = 1

pref = db3[db3$Espece=="limiteTruite" | db3$Espece=="limiteBrochet" ,] %>%
  group_by(An,id_sonde,Pref,Espece)%>%
  mutate(Somme = sum(nb))

pref=pref[,c(1,7,8,9,11)]
pref=pref[which(duplicated(pref)==F),]

pref$Espece <- as.factor(pref$Espece)
pref$Pref <- as.factor(pref$Pref)
pref$An <- as.factor(pref$An)


pref$Espece <- factor(pref$Espece,
                       levels = c(
                         "limiteBrochet", "limiteR" ,"limiteTruite" 
                       ),
                       labels =c("Brochet","Rien","Truite")
)


prefTouques = pref[(pref$id_sonde == 825|
                     pref$id_sonde == 827|
                     pref$id_sonde == 828|
                     pref$id_sonde == 830),] 


prefTouques$id_sonde <- factor(prefTouques$id_sonde,exclude=NULL)
prefTouques$id_sonde <- factor(prefTouques$id_sonde,
                        levels = c(
                          "825", "827", "828", "830"
                        ),
                        labels =c("Touques T1","Touques T3","Touques T4","Touques T6")
)
prefTouques$Espece <- factor(prefTouques$Espece,exclude=NULL)

prefTouques$Pref=factor(prefTouques$Pref,exclude=NULL)

prefTouques$An =factor(prefTouques$An,exclude=NULL)


colnames(prefTouques) = c("Sonde","Espèce","Seuils thermiques","Années","Nombre d'occurence")


#########################################################################################
# Mise au point des bases de données pour les dygraphs de la partie "cours d'eau"
#########################################################################################

##################################
# Sondes Touques
##################################

###########
# Sonde 825 Touques T1
###########
dbsonde825MM <- dbMM[dbMM$id_sonde==825,]
db_xts_date825 = dbsonde825MM$date

# Calcule droite de régression MM30
dbsonde825MMReg <- as.data.frame(cbind(dbsonde825MM$date,dbsonde825MM$TeauMinMM30,dbsonde825MM$TeauMaxMM30))
colnames(dbsonde825MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde825MMReg$date <- as.Date(dbsonde825MMReg$date,origin="1970-01-01")
dbsonde825MMReg <- dbsonde825MMReg[is.na(dbsonde825MMReg$TeauMinMM30)==F,]
dbsonde825MMReg$t = 1:nrow(dbsonde825MMReg)
dbsonde825MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde825MMReg)$fitted.values
dbsonde825MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde825MMReg)$fitted.values
dbsonde825MMReg = dbsonde825MMReg[,-c(2:4)]


dbsonde825MM=merge(dbsonde825MM,dbsonde825MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde825MMReg <- as.data.frame(cbind(dbsonde825MM$date,dbsonde825MM$TeauMinMM365,dbsonde825MM$TeauMaxMM365))
colnames(dbsonde825MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde825MMReg$date <- as.Date(dbsonde825MMReg$date,origin="1970-01-01")
dbsonde825MMReg <- dbsonde825MMReg[is.na(dbsonde825MMReg$TeauMinMM365)==F,]
dbsonde825MMReg$t = 1:nrow(dbsonde825MMReg)
dbsonde825MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde825MMReg)$fitted.values
dbsonde825MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde825MMReg)$fitted.values
dbsonde825MMReg = dbsonde825MMReg[,-c(2:4)]
dbsonde825MM=merge(dbsonde825MM,dbsonde825MMReg,by="date",all.x=T)


db_xts_sonde825 = dbsonde825MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde825MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date825 = dbsonde825MM$date
db_xts_sonde825 = xts(db_xts_sonde825, order.by=db_xts_date825)
db_xts_sonde825a =  db_xts_sonde825[,c(1,4,2,5,11,8)]

db_xts_sonde825b = db_xts_sonde825[,c(6,12,9,17,18)]
db_xts_sonde825b = db_xts_sonde825b[is.na(db_xts_sonde825b$TeauMinMM30)==F,]
db_xts_sonde825c = db_xts_sonde825[,c(7,13,10,19,20)]
db_xts_sonde825c = db_xts_sonde825c[is.na(db_xts_sonde825c$TeauMinMM365)==F,]

rm(dbsonde825MMReg)



###########
# Sonde 827 Touques T3
###########
dbsonde827MM <- dbMM[dbMM$id_sonde==827,]

# Calcule droite de régression MM30
dbsonde827MMReg <- as.data.frame(cbind(dbsonde827MM$date,dbsonde827MM$TeauMinMM30,dbsonde827MM$TeauMaxMM30))
colnames(dbsonde827MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde827MMReg$date <- as.Date(dbsonde827MMReg$date,origin="1970-01-01")
dbsonde827MMReg <- dbsonde827MMReg[is.na(dbsonde827MMReg$TeauMinMM30)==F,]
dbsonde827MMReg$t = 1:nrow(dbsonde827MMReg)
dbsonde827MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde827MMReg)$fitted.values
dbsonde827MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde827MMReg)$fitted.values
dbsonde827MMReg = dbsonde827MMReg[,-c(2:4)]


dbsonde827MM=merge(dbsonde827MM,dbsonde827MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde827MMReg <- as.data.frame(cbind(dbsonde827MM$date,dbsonde827MM$TeauMinMM365,dbsonde827MM$TeauMaxMM365))
colnames(dbsonde827MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde827MMReg$date <- as.Date(dbsonde827MMReg$date,origin="1970-01-01")
dbsonde827MMReg <- dbsonde827MMReg[is.na(dbsonde827MMReg$TeauMinMM365)==F,]
dbsonde827MMReg$t = 1:nrow(dbsonde827MMReg)
dbsonde827MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde827MMReg)$fitted.values
dbsonde827MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde827MMReg)$fitted.values
dbsonde827MMReg = dbsonde827MMReg[,-c(2:4)]
dbsonde827MM=merge(dbsonde827MM,dbsonde827MMReg,by="date",all.x=T)


db_xts_sonde827 = dbsonde827MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde827MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date827 = dbsonde827MM$date
db_xts_sonde827 = xts(db_xts_sonde827, order.by=db_xts_date827)
db_xts_sonde827a =  db_xts_sonde827[,c(1,4,2,5,11,8)]
db_xts_sonde827b = db_xts_sonde827[,c(6,12,9,17,18)]
db_xts_sonde827b = db_xts_sonde827b[is.na(db_xts_sonde827b$TeauMinMM30)==F,]
db_xts_sonde827c = db_xts_sonde827[,c(7,13,10,19,20)]
db_xts_sonde827c = db_xts_sonde827c[is.na(db_xts_sonde827c$TeauMinMM365)==F,]

rm(dbsonde827MMReg)

###########
# Sonde 828 Touques T4
###########
dbsonde828MM <- dbMM[dbMM$id_sonde==828,]

# Calcule droite de régression MM30
dbsonde828MMReg <- as.data.frame(cbind(dbsonde828MM$date,dbsonde828MM$TeauMinMM30,dbsonde828MM$TeauMaxMM30))
colnames(dbsonde828MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde828MMReg$date <- as.Date(dbsonde828MMReg$date,origin="1970-01-01")
dbsonde828MMReg <- dbsonde828MMReg[is.na(dbsonde828MMReg$TeauMinMM30)==F,]
dbsonde828MMReg$t = 1:nrow(dbsonde828MMReg)
dbsonde828MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde828MMReg)$fitted.values
dbsonde828MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde828MMReg)$fitted.values
dbsonde828MMReg = dbsonde828MMReg[,-c(2:4)]


dbsonde828MM=merge(dbsonde828MM,dbsonde828MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde828MMReg <- as.data.frame(cbind(dbsonde828MM$date,dbsonde828MM$TeauMinMM365,dbsonde828MM$TeauMaxMM365))
colnames(dbsonde828MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde828MMReg$date <- as.Date(dbsonde828MMReg$date,origin="1970-01-01")
dbsonde828MMReg <- dbsonde828MMReg[is.na(dbsonde828MMReg$TeauMinMM365)==F,]
dbsonde828MMReg$t = 1:nrow(dbsonde828MMReg)
dbsonde828MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde828MMReg)$fitted.values
dbsonde828MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde828MMReg)$fitted.values
dbsonde828MMReg = dbsonde828MMReg[,-c(2:4)]
dbsonde828MM=merge(dbsonde828MM,dbsonde828MMReg,by="date",all.x=T)


db_xts_sonde828 = dbsonde828MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde828MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date828 = dbsonde828MM$date
db_xts_sonde828 = xts(db_xts_sonde828, order.by=db_xts_date828)
db_xts_sonde828a =  db_xts_sonde828[,c(1,4,2,5,11,8)]
db_xts_sonde828b = db_xts_sonde828[,c(6,12,9,17,18)]
db_xts_sonde828b = db_xts_sonde828b[is.na(db_xts_sonde828b$TeauMinMM30)==F,]
db_xts_sonde828c = db_xts_sonde828[,c(7,13,10,19,20)]
db_xts_sonde828c = db_xts_sonde828c[is.na(db_xts_sonde828c$TeauMinMM365)==F,]

rm(dbsonde828MMReg)

###########
# Sonde 830 Touques T6
###########
dbsonde830MM <- dbMM[dbMM$id_sonde==830,]

# Calcule droite de régression MM30
dbsonde830MMReg <- as.data.frame(cbind(dbsonde830MM$date,dbsonde830MM$TeauMinMM30,dbsonde830MM$TeauMaxMM30))
colnames(dbsonde830MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde830MMReg$date <- as.Date(dbsonde830MMReg$date,origin="1970-01-01")
dbsonde830MMReg <- dbsonde830MMReg[is.na(dbsonde830MMReg$TeauMinMM30)==F,]
dbsonde830MMReg$t = 1:nrow(dbsonde830MMReg)
dbsonde830MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde830MMReg)$fitted.values
dbsonde830MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde830MMReg)$fitted.values
dbsonde830MMReg = dbsonde830MMReg[,-c(2:4)]


dbsonde830MM=merge(dbsonde830MM,dbsonde830MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde830MMReg <- as.data.frame(cbind(dbsonde830MM$date,dbsonde830MM$TeauMinMM365,dbsonde830MM$TeauMaxMM365))
colnames(dbsonde830MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde830MMReg$date <- as.Date(dbsonde830MMReg$date,origin="1970-01-01")
dbsonde830MMReg <- dbsonde830MMReg[is.na(dbsonde830MMReg$TeauMinMM365)==F,]
dbsonde830MMReg$t = 1:nrow(dbsonde830MMReg)
dbsonde830MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde830MMReg)$fitted.values
dbsonde830MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde830MMReg)$fitted.values
dbsonde830MMReg = dbsonde830MMReg[,-c(2:4)]
dbsonde830MM=merge(dbsonde830MM,dbsonde830MMReg,by="date",all.x=T)


db_xts_sonde830 = dbsonde830MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde830MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date830 = dbsonde830MM$date
db_xts_sonde830 = xts(db_xts_sonde830, order.by=db_xts_date830)
db_xts_sonde830a =  db_xts_sonde830[,c(1,4,2,5,11,8)]
db_xts_sonde830b = db_xts_sonde830[,c(6,12,9,17,18)]
db_xts_sonde830b = db_xts_sonde830b[is.na(db_xts_sonde830b$TeauMinMM30)==F,]
db_xts_sonde830c = db_xts_sonde830[,c(7,13,10,19,20)]
db_xts_sonde830c = db_xts_sonde830c[is.na(db_xts_sonde830c$TeauMinMM365)==F,]

rm(dbsonde830MMReg)

rm(dbsonde825MM,dbsonde827MM,dbsonde828MM,dbsonde830MM,
   db_xts_date825,db_xts_date827,db_xts_date828,db_xts_date830)

####################
# Regroupement des sondes
####################

db_xts_sonde825a$id_sonde = 825
db_xts_sonde827a$id_sonde = 827
db_xts_sonde828a$id_sonde = 828
db_xts_sonde830a$id_sonde = 830



db_Touques_xtsa = rbind(db_xts_sonde825a,db_xts_sonde827a,db_xts_sonde828a,db_xts_sonde830a)

db_xts_sonde825b$id_sonde = 825
db_xts_sonde827b$id_sonde = 827
db_xts_sonde828b$id_sonde = 828
db_xts_sonde830b$id_sonde = 830

db_Touques_xtsb = rbind(db_xts_sonde825b,db_xts_sonde827b,db_xts_sonde828b,db_xts_sonde830b)

db_xts_sonde825c$id_sonde = 825
db_xts_sonde827c$id_sonde = 827
db_xts_sonde828c$id_sonde = 828
db_xts_sonde830c$id_sonde = 830

db_Touques_xtsc = rbind(db_xts_sonde825c,db_xts_sonde827c,db_xts_sonde828c,db_xts_sonde830c)


nameCola = c("Température minimale","Température moyenne","Température maximale",
             "Température minimale MM7","Température moyenne MM7","Température maximale MM7","id_sonde")
colnames(db_Touques_xtsa)=nameCola

nameColb = c("Température minimale MM30","Température moyenne MM30","Température maximale MM30",
             "Régression températures min","Régression températures max","id_sonde")
colnames(db_Touques_xtsb)=nameColb

nameColc = c("Température minimale MM365","Température moyenne MM365","Température maximale MM365",
             "Régression températures min","Régression températures max","id_sonde")
colnames(db_Touques_xtsc) = nameColc


##################################
# Sondes Orne
##################################

###########
# Sonde 817
###########
dbsonde817MM <- dbMM[dbMM$id_sonde==817,]

# Calcule droite de régression MM30
dbsonde817MMReg <- as.data.frame(cbind(dbsonde817MM$date,dbsonde817MM$TeauMinMM30,dbsonde817MM$TeauMaxMM30))
colnames(dbsonde817MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde817MMReg$date <- as.Date(dbsonde817MMReg$date,origin="1970-01-01")
dbsonde817MMReg <- dbsonde817MMReg[is.na(dbsonde817MMReg$TeauMinMM30)==F,]
dbsonde817MMReg$t = 1:nrow(dbsonde817MMReg)
dbsonde817MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde817MMReg)$fitted.values
dbsonde817MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde817MMReg)$fitted.values
dbsonde817MMReg = dbsonde817MMReg[,-c(2:4)]


dbsonde817MM=merge(dbsonde817MM,dbsonde817MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde817MMReg <- as.data.frame(cbind(dbsonde817MM$date,dbsonde817MM$TeauMinMM365,dbsonde817MM$TeauMaxMM365))
colnames(dbsonde817MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde817MMReg$date <- as.Date(dbsonde817MMReg$date,origin="1970-01-01")
dbsonde817MMReg <- dbsonde817MMReg[is.na(dbsonde817MMReg$TeauMinMM365)==F,]
dbsonde817MMReg$t = 1:nrow(dbsonde817MMReg)
dbsonde817MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde817MMReg)$fitted.values
dbsonde817MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde817MMReg)$fitted.values
dbsonde817MMReg = dbsonde817MMReg[,-c(2:4)]
dbsonde817MM=merge(dbsonde817MM,dbsonde817MMReg,by="date",all.x=T)


db_xts_sonde817 = dbsonde817MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde817MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date817 = dbsonde817MM$date
db_xts_sonde817 = xts(db_xts_sonde817, order.by=db_xts_date817)
db_xts_sonde817a =  db_xts_sonde817[,c(1,4,2,5,11,8)]
db_xts_sonde817b = db_xts_sonde817[,c(6,12,9,17,18)]
db_xts_sonde817b = db_xts_sonde817b[is.na(db_xts_sonde817b$TeauMinMM30)==F,]
db_xts_sonde817c = db_xts_sonde817[,c(7,13,10,19,20)]
db_xts_sonde817c = db_xts_sonde817c[is.na(db_xts_sonde817c$TeauMinMM365)==F,]

rm(dbsonde817MMReg)



###########
# Sonde 818
###########
dbsonde818MM <- dbMM[dbMM$id_sonde==818,]

# Calcule droite de régression MM30
dbsonde818MMReg <- as.data.frame(cbind(dbsonde818MM$date,dbsonde818MM$TeauMinMM30,dbsonde818MM$TeauMaxMM30))
colnames(dbsonde818MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde818MMReg$date <- as.Date(dbsonde818MMReg$date,origin="1970-01-01")
dbsonde818MMReg <- dbsonde818MMReg[is.na(dbsonde818MMReg$TeauMinMM30)==F,]
dbsonde818MMReg$t = 1:nrow(dbsonde818MMReg)
dbsonde818MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde818MMReg)$fitted.values
dbsonde818MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde818MMReg)$fitted.values
dbsonde818MMReg = dbsonde818MMReg[,-c(2:4)]


dbsonde818MM=merge(dbsonde818MM,dbsonde818MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde818MMReg <- as.data.frame(cbind(dbsonde818MM$date,dbsonde818MM$TeauMinMM365,dbsonde818MM$TeauMaxMM365))
colnames(dbsonde818MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde818MMReg$date <- as.Date(dbsonde818MMReg$date,origin="1970-01-01")
dbsonde818MMReg <- dbsonde818MMReg[is.na(dbsonde818MMReg$TeauMinMM365)==F,]
dbsonde818MMReg$t = 1:nrow(dbsonde818MMReg)
dbsonde818MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde818MMReg)$fitted.values
dbsonde818MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde818MMReg)$fitted.values
dbsonde818MMReg = dbsonde818MMReg[,-c(2:4)]
dbsonde818MM=merge(dbsonde818MM,dbsonde818MMReg,by="date",all.x=T)


db_xts_sonde818 = dbsonde818MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde818MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date818 = dbsonde818MM$date
db_xts_sonde818 = xts(db_xts_sonde818, order.by=db_xts_date818)
db_xts_sonde818a =  db_xts_sonde818[,c(1,4,2,5,11,8)]
db_xts_sonde818b = db_xts_sonde818[,c(6,12,9,17,18)]
db_xts_sonde818b = db_xts_sonde818b[is.na(db_xts_sonde818b$TeauMinMM30)==F,]
db_xts_sonde818c = db_xts_sonde818[,c(7,13,10,19,20)]
db_xts_sonde818c = db_xts_sonde818c[is.na(db_xts_sonde818c$TeauMinMM365)==F,]

rm(dbsonde818MMReg)
###########
# Sonde 819
###########
dbsonde819MM <- dbMM[dbMM$id_sonde==819,]

# Calcule droite de régression MM30
dbsonde819MMReg <- as.data.frame(cbind(dbsonde819MM$date,dbsonde819MM$TeauMinMM30,dbsonde819MM$TeauMaxMM30))
colnames(dbsonde819MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde819MMReg$date <- as.Date(dbsonde819MMReg$date,origin="1970-01-01")
dbsonde819MMReg <- dbsonde819MMReg[is.na(dbsonde819MMReg$TeauMinMM30)==F,]
dbsonde819MMReg$t = 1:nrow(dbsonde819MMReg)
dbsonde819MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde819MMReg)$fitted.values
dbsonde819MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde819MMReg)$fitted.values
dbsonde819MMReg = dbsonde819MMReg[,-c(2:4)]


dbsonde819MM=merge(dbsonde819MM,dbsonde819MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde819MMReg <- as.data.frame(cbind(dbsonde819MM$date,dbsonde819MM$TeauMinMM365,dbsonde819MM$TeauMaxMM365))
colnames(dbsonde819MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde819MMReg$date <- as.Date(dbsonde819MMReg$date,origin="1970-01-01")
dbsonde819MMReg <- dbsonde819MMReg[is.na(dbsonde819MMReg$TeauMinMM365)==F,]
dbsonde819MMReg$t = 1:nrow(dbsonde819MMReg)
dbsonde819MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde819MMReg)$fitted.values
dbsonde819MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde819MMReg)$fitted.values
dbsonde819MMReg = dbsonde819MMReg[,-c(2:4)]
dbsonde819MM=merge(dbsonde819MM,dbsonde819MMReg,by="date",all.x=T)


db_xts_sonde819 = dbsonde819MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde819MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date819 = dbsonde819MM$date
db_xts_sonde819 = xts(db_xts_sonde819, order.by=db_xts_date819)
db_xts_sonde819a =  db_xts_sonde819[,c(1,4,2,5,11,8)]
db_xts_sonde819b = db_xts_sonde819[,c(6,12,9,17,18)]
db_xts_sonde819b = db_xts_sonde819b[is.na(db_xts_sonde819b$TeauMinMM30)==F,]
db_xts_sonde819c = db_xts_sonde819[,c(7,13,10,19,20)]
db_xts_sonde819c = db_xts_sonde819c[is.na(db_xts_sonde819c$TeauMinMM365)==F,]

rm(dbsonde819MMReg)


rm(dbsonde817MM,dbsonde818MM,dbsonde819MM,dbsonde830MM,
   db_xts_date817,db_xts_date818,db_xts_date819,db_xts_date830)

####################
# Regroupement des sondes
####################

db_xts_sonde817a$id_sonde = 817
db_xts_sonde818a$id_sonde = 818
db_xts_sonde819a$id_sonde = 819

db_Orne_xtsa = rbind(db_xts_sonde817a,db_xts_sonde818a,db_xts_sonde819a)

db_xts_sonde817b$id_sonde = 817
db_xts_sonde818b$id_sonde = 818
db_xts_sonde819b$id_sonde = 819

db_Orne_xtsb = rbind(db_xts_sonde817b,db_xts_sonde818b,db_xts_sonde819b)

db_xts_sonde817c$id_sonde = 817
db_xts_sonde818c$id_sonde = 818
db_xts_sonde819c$id_sonde = 819

db_Orne_xtsc = rbind(db_xts_sonde817c,db_xts_sonde818c,db_xts_sonde819c)



##################################
# Sondes Odon
##################################

###########
# Sonde 812
###########
dbsonde812MM <- dbMM[dbMM$id_sonde==812,]

# Calcule droite de régression MM30
dbsonde812MMReg <- as.data.frame(cbind(dbsonde812MM$date,dbsonde812MM$TeauMinMM30,dbsonde812MM$TeauMaxMM30))
colnames(dbsonde812MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde812MMReg$date <- as.Date(dbsonde812MMReg$date,origin="1970-01-01")
dbsonde812MMReg <- dbsonde812MMReg[is.na(dbsonde812MMReg$TeauMinMM30)==F,]
dbsonde812MMReg$t = 1:nrow(dbsonde812MMReg)
dbsonde812MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde812MMReg)$fitted.values
dbsonde812MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde812MMReg)$fitted.values
dbsonde812MMReg = dbsonde812MMReg[,-c(2:4)]


dbsonde812MM=merge(dbsonde812MM,dbsonde812MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde812MMReg <- as.data.frame(cbind(dbsonde812MM$date,dbsonde812MM$TeauMinMM365,dbsonde812MM$TeauMaxMM365))
colnames(dbsonde812MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde812MMReg$date <- as.Date(dbsonde812MMReg$date,origin="1970-01-01")
dbsonde812MMReg <- dbsonde812MMReg[is.na(dbsonde812MMReg$TeauMinMM365)==F,]
dbsonde812MMReg$t = 1:nrow(dbsonde812MMReg)
dbsonde812MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde812MMReg)$fitted.values
dbsonde812MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde812MMReg)$fitted.values
dbsonde812MMReg = dbsonde812MMReg[,-c(2:4)]
dbsonde812MM=merge(dbsonde812MM,dbsonde812MMReg,by="date",all.x=T)


db_xts_sonde812 = dbsonde812MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde812MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date812 = dbsonde812MM$date
db_xts_sonde812 = xts(db_xts_sonde812, order.by=db_xts_date812)
db_xts_sonde812a =  db_xts_sonde812[,c(1,4,2,5,11,8)]
db_xts_sonde812b = db_xts_sonde812[,c(6,12,9,17,18)]
db_xts_sonde812b = db_xts_sonde812b[is.na(db_xts_sonde812b$TeauMinMM30)==F,]
db_xts_sonde812c = db_xts_sonde812[,c(7,13,10,19,20)]
db_xts_sonde812c = db_xts_sonde812c[is.na(db_xts_sonde812c$TeauMinMM365)==F,]

rm(dbsonde812MMReg)



###########
# Sonde 813
###########
dbsonde813MM <- dbMM[dbMM$id_sonde==813,]

# Calcule droite de régression MM30
dbsonde813MMReg <- as.data.frame(cbind(dbsonde813MM$date,dbsonde813MM$TeauMinMM30,dbsonde813MM$TeauMaxMM30))
colnames(dbsonde813MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde813MMReg$date <- as.Date(dbsonde813MMReg$date,origin="1970-01-01")
dbsonde813MMReg <- dbsonde813MMReg[is.na(dbsonde813MMReg$TeauMinMM30)==F,]
dbsonde813MMReg$t = 1:nrow(dbsonde813MMReg)
dbsonde813MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde813MMReg)$fitted.values
dbsonde813MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde813MMReg)$fitted.values
dbsonde813MMReg = dbsonde813MMReg[,-c(2:4)]


dbsonde813MM=merge(dbsonde813MM,dbsonde813MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde813MMReg <- as.data.frame(cbind(dbsonde813MM$date,dbsonde813MM$TeauMinMM365,dbsonde813MM$TeauMaxMM365))
colnames(dbsonde813MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde813MMReg$date <- as.Date(dbsonde813MMReg$date,origin="1970-01-01")
dbsonde813MMReg <- dbsonde813MMReg[is.na(dbsonde813MMReg$TeauMinMM365)==F,]
dbsonde813MMReg$t = 1:nrow(dbsonde813MMReg)
dbsonde813MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde813MMReg)$fitted.values
dbsonde813MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde813MMReg)$fitted.values
dbsonde813MMReg = dbsonde813MMReg[,-c(2:4)]
dbsonde813MM=merge(dbsonde813MM,dbsonde813MMReg,by="date",all.x=T)


db_xts_sonde813 = dbsonde813MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde813MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date813 = dbsonde813MM$date
db_xts_sonde813 = xts(db_xts_sonde813, order.by=db_xts_date813)
db_xts_sonde813a =  db_xts_sonde813[,c(1,4,2,5,8,11)]
db_xts_sonde813b = db_xts_sonde813[,c(6,12,9,17,18)]
db_xts_sonde813b = db_xts_sonde813b[is.na(db_xts_sonde813b$TeauMinMM30)==F,]
db_xts_sonde813c = db_xts_sonde813[,c(7,13,10,19,20)]
db_xts_sonde813c = db_xts_sonde813c[is.na(db_xts_sonde813c$TeauMinMM365)==F,]

rm(dbsonde813MMReg)
###########
# Sonde 815
###########
dbsonde815MM <- dbMM[dbMM$id_sonde==815,]

# Calcule droite de régression MM30
dbsonde815MMReg <- as.data.frame(cbind(dbsonde815MM$date,dbsonde815MM$TeauMinMM30,dbsonde815MM$TeauMaxMM30))
colnames(dbsonde815MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde815MMReg$date <- as.Date(dbsonde815MMReg$date,origin="1970-01-01")
dbsonde815MMReg <- dbsonde815MMReg[is.na(dbsonde815MMReg$TeauMinMM30)==F,]
dbsonde815MMReg$t = 1:nrow(dbsonde815MMReg)
dbsonde815MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde815MMReg)$fitted.values
dbsonde815MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde815MMReg)$fitted.values
dbsonde815MMReg = dbsonde815MMReg[,-c(2:4)]


dbsonde815MM=merge(dbsonde815MM,dbsonde815MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde815MMReg <- as.data.frame(cbind(dbsonde815MM$date,dbsonde815MM$TeauMinMM365,dbsonde815MM$TeauMaxMM365))
colnames(dbsonde815MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde815MMReg$date <- as.Date(dbsonde815MMReg$date,origin="1970-01-01")
dbsonde815MMReg <- dbsonde815MMReg[is.na(dbsonde815MMReg$TeauMinMM365)==F,]
dbsonde815MMReg$t = 1:nrow(dbsonde815MMReg)
dbsonde815MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde815MMReg)$fitted.values
dbsonde815MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde815MMReg)$fitted.values
dbsonde815MMReg = dbsonde815MMReg[,-c(2:4)]
dbsonde815MM=merge(dbsonde815MM,dbsonde815MMReg,by="date",all.x=T)


db_xts_sonde815 = dbsonde815MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde815MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date815 = dbsonde815MM$date
db_xts_sonde815 = xts(db_xts_sonde815, order.by=db_xts_date815)
db_xts_sonde815a =  db_xts_sonde815[,c(1,4,2,5,11,8)]
db_xts_sonde815b = db_xts_sonde815[,c(6,12,9,17,18)]
db_xts_sonde815b = db_xts_sonde815b[is.na(db_xts_sonde815b$TeauMinMM30)==F,]
db_xts_sonde815c = db_xts_sonde815[,c(7,13,10,19,20)]
db_xts_sonde815c = db_xts_sonde815c[is.na(db_xts_sonde815c$TeauMinMM365)==F,]

rm(dbsonde815MMReg)

###########
# Sonde 816
###########
dbsonde816MM <- dbMM[dbMM$id_sonde==816,]

# Calcule droite de régression MM30
dbsonde816MMReg <- as.data.frame(cbind(dbsonde816MM$date,dbsonde816MM$TeauMinMM30,dbsonde816MM$TeauMaxMM30))
colnames(dbsonde816MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde816MMReg$date <- as.Date(dbsonde816MMReg$date,origin="1970-01-01")
dbsonde816MMReg <- dbsonde816MMReg[is.na(dbsonde816MMReg$TeauMinMM30)==F,]
dbsonde816MMReg$t = 1:nrow(dbsonde816MMReg)
dbsonde816MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde816MMReg)$fitted.values
dbsonde816MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde816MMReg)$fitted.values
dbsonde816MMReg = dbsonde816MMReg[,-c(2:4)]


dbsonde816MM=merge(dbsonde816MM,dbsonde816MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde816MMReg <- as.data.frame(cbind(dbsonde816MM$date,dbsonde816MM$TeauMinMM365,dbsonde816MM$TeauMaxMM365))
colnames(dbsonde816MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde816MMReg$date <- as.Date(dbsonde816MMReg$date,origin="1970-01-01")
dbsonde816MMReg <- dbsonde816MMReg[is.na(dbsonde816MMReg$TeauMinMM365)==F,]
dbsonde816MMReg$t = 1:nrow(dbsonde816MMReg)
dbsonde816MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde816MMReg)$fitted.values
dbsonde816MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde816MMReg)$fitted.values
dbsonde816MMReg = dbsonde816MMReg[,-c(2:4)]
dbsonde816MM=merge(dbsonde816MM,dbsonde816MMReg,by="date",all.x=T)


db_xts_sonde816 = dbsonde816MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde816MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date816 = dbsonde816MM$date
db_xts_sonde816 = xts(db_xts_sonde816, order.by=db_xts_date816)
db_xts_sonde816a =  db_xts_sonde816[,c(1,4,2,5,11,8)]
db_xts_sonde816b = db_xts_sonde816[,c(6,12,9,17,18)]
db_xts_sonde816b = db_xts_sonde816b[is.na(db_xts_sonde816b$TeauMinMM30)==F,]
db_xts_sonde816c = db_xts_sonde816[,c(7,13,10,19,20)]
db_xts_sonde816c = db_xts_sonde816c[is.na(db_xts_sonde816c$TeauMinMM365)==F,]

rm(dbsonde816MMReg)

rm(dbsonde812MM,dbsonde813MM,dbsonde815MM,dbsonde816MM,
   db_xts_date812,db_xts_date813,db_xts_date815,db_xts_date816)

####################
# Regroupement des sondes
####################


db_xts_sonde812a$id_sonde = 812
db_xts_sonde813a$id_sonde = 813
db_xts_sonde815a$id_sonde = 815
db_xts_sonde816a$id_sonde = 816

db_Odon_xtsa = rbind(db_xts_sonde812a,db_xts_sonde813a,db_xts_sonde815a,db_xts_sonde816a)

db_xts_sonde812b$id_sonde = 812
db_xts_sonde813b$id_sonde = 813
db_xts_sonde815b$id_sonde = 815
db_xts_sonde816b$id_sonde = 816

db_Odon_xtsb = rbind(db_xts_sonde812b,db_xts_sonde813b,db_xts_sonde815b,db_xts_sonde816b)

db_xts_sonde812c$id_sonde = 812
db_xts_sonde813c$id_sonde = 813
db_xts_sonde815c$id_sonde = 815
db_xts_sonde816c$id_sonde = 816

db_Odon_xtsc = rbind(db_xts_sonde812c,db_xts_sonde813c,db_xts_sonde815c,db_xts_sonde816c)
##################################
# Sondes Sélune
##################################

###########
# Sonde 824
###########
dbsonde824MM <- dbMM[dbMM$id_sonde==824,]

# Calcule droite de régression MM30
dbsonde824MMReg <- as.data.frame(cbind(dbsonde824MM$date,dbsonde824MM$TeauMinMM30,dbsonde824MM$TeauMaxMM30))
colnames(dbsonde824MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde824MMReg$date <- as.Date(dbsonde824MMReg$date,origin="1970-01-01")
dbsonde824MMReg <- dbsonde824MMReg[is.na(dbsonde824MMReg$TeauMinMM30)==F,]
dbsonde824MMReg$t = 1:nrow(dbsonde824MMReg)
dbsonde824MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde824MMReg)$fitted.values
dbsonde824MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde824MMReg)$fitted.values
dbsonde824MMReg = dbsonde824MMReg[,-c(2:4)]


dbsonde824MM=merge(dbsonde824MM,dbsonde824MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde824MMReg <- as.data.frame(cbind(dbsonde824MM$date,dbsonde824MM$TeauMinMM365,dbsonde824MM$TeauMaxMM365))
colnames(dbsonde824MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde824MMReg$date <- as.Date(dbsonde824MMReg$date,origin="1970-01-01")
dbsonde824MMReg <- dbsonde824MMReg[is.na(dbsonde824MMReg$TeauMinMM365)==F,]
dbsonde824MMReg$t = 1:nrow(dbsonde824MMReg)
dbsonde824MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde824MMReg)$fitted.values
dbsonde824MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde824MMReg)$fitted.values
dbsonde824MMReg = dbsonde824MMReg[,-c(2:4)]
dbsonde824MM=merge(dbsonde824MM,dbsonde824MMReg,by="date",all.x=T)


db_xts_sonde824 = dbsonde824MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde824MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date824 = dbsonde824MM$date
db_xts_sonde824 = xts(db_xts_sonde824, order.by=db_xts_date824)
db_xts_sonde824a =  db_xts_sonde824[,c(1,4,2,5,11,8)]
db_xts_sonde824b = db_xts_sonde824[,c(6,12,9,17,18)]
db_xts_sonde824b = db_xts_sonde824b[is.na(db_xts_sonde824b$TeauMinMM30)==F,]
db_xts_sonde824c = db_xts_sonde824[,c(7,13,10,19,20)]
db_xts_sonde824c = db_xts_sonde824c[is.na(db_xts_sonde824c$TeauMinMM365)==F,]

rm(dbsonde824MMReg)



###########
# Sonde 821
###########
dbsonde821MM <- dbMM[dbMM$id_sonde==821,]

# Calcule droite de régression MM30
dbsonde821MMReg <- as.data.frame(cbind(dbsonde821MM$date,dbsonde821MM$TeauMinMM30,dbsonde821MM$TeauMaxMM30))
colnames(dbsonde821MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde821MMReg$date <- as.Date(dbsonde821MMReg$date,origin="1970-01-01")
dbsonde821MMReg <- dbsonde821MMReg[is.na(dbsonde821MMReg$TeauMinMM30)==F,]
dbsonde821MMReg$t = 1:nrow(dbsonde821MMReg)
dbsonde821MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde821MMReg)$fitted.values
dbsonde821MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde821MMReg)$fitted.values
dbsonde821MMReg = dbsonde821MMReg[,-c(2:4)]


dbsonde821MM=merge(dbsonde821MM,dbsonde821MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde821MMReg <- as.data.frame(cbind(dbsonde821MM$date,dbsonde821MM$TeauMinMM365,dbsonde821MM$TeauMaxMM365))
colnames(dbsonde821MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde821MMReg$date <- as.Date(dbsonde821MMReg$date,origin="1970-01-01")
dbsonde821MMReg <- dbsonde821MMReg[is.na(dbsonde821MMReg$TeauMinMM365)==F,]
dbsonde821MMReg$t = 1:nrow(dbsonde821MMReg)
dbsonde821MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde821MMReg)$fitted.values
dbsonde821MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde821MMReg)$fitted.values
dbsonde821MMReg = dbsonde821MMReg[,-c(2:4)]
dbsonde821MM=merge(dbsonde821MM,dbsonde821MMReg,by="date",all.x=T)


db_xts_sonde821 = dbsonde821MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde821MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date821 = dbsonde821MM$date
db_xts_sonde821 = xts(db_xts_sonde821, order.by=db_xts_date821)
db_xts_sonde821a =  db_xts_sonde821[,c(1,4,2,5,11,8)]
db_xts_sonde821b = db_xts_sonde821[,c(6,12,9,17,18)]
db_xts_sonde821b = db_xts_sonde821b[is.na(db_xts_sonde821b$TeauMinMM30)==F,]
db_xts_sonde821c = db_xts_sonde821[,c(7,13,10,19,20)]
db_xts_sonde821c = db_xts_sonde821c[is.na(db_xts_sonde821c$TeauMinMM365)==F,]

rm(dbsonde821MMReg)
###########
# Sonde 822
###########
dbsonde822MM <- dbMM[dbMM$id_sonde==822,]

# Calcule droite de régression MM30
dbsonde822MMReg <- as.data.frame(cbind(dbsonde822MM$date,dbsonde822MM$TeauMinMM30,dbsonde822MM$TeauMaxMM30))
colnames(dbsonde822MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde822MMReg$date <- as.Date(dbsonde822MMReg$date,origin="1970-01-01")
dbsonde822MMReg <- dbsonde822MMReg[is.na(dbsonde822MMReg$TeauMinMM30)==F,]
dbsonde822MMReg$t = 1:nrow(dbsonde822MMReg)
dbsonde822MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde822MMReg)$fitted.values
dbsonde822MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde822MMReg)$fitted.values
dbsonde822MMReg = dbsonde822MMReg[,-c(2:4)]


dbsonde822MM=merge(dbsonde822MM,dbsonde822MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde822MMReg <- as.data.frame(cbind(dbsonde822MM$date,dbsonde822MM$TeauMinMM365,dbsonde822MM$TeauMaxMM365))
colnames(dbsonde822MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde822MMReg$date <- as.Date(dbsonde822MMReg$date,origin="1970-01-01")
dbsonde822MMReg <- dbsonde822MMReg[is.na(dbsonde822MMReg$TeauMinMM365)==F,]
dbsonde822MMReg$t = 1:nrow(dbsonde822MMReg)
dbsonde822MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde822MMReg)$fitted.values
dbsonde822MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde822MMReg)$fitted.values
dbsonde822MMReg = dbsonde822MMReg[,-c(2:4)]
dbsonde822MM=merge(dbsonde822MM,dbsonde822MMReg,by="date",all.x=T)


db_xts_sonde822 = dbsonde822MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde822MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date822 = dbsonde822MM$date
db_xts_sonde822 = xts(db_xts_sonde822, order.by=db_xts_date822)
db_xts_sonde822a =  db_xts_sonde822[,c(1,4,2,5,11,8)]
db_xts_sonde822b = db_xts_sonde822[,c(6,12,9,17,18)]
db_xts_sonde822b = db_xts_sonde822b[is.na(db_xts_sonde822b$TeauMinMM30)==F,]
db_xts_sonde822c = db_xts_sonde822[,c(7,13,10,19,20)]
db_xts_sonde822c = db_xts_sonde822c[is.na(db_xts_sonde822c$TeauMinMM365)==F,]

rm(dbsonde822MMReg)

###########
# Sonde 820
###########
dbsonde820MM <- dbMM[dbMM$id_sonde==820,]

# Calcule droite de régression MM30
dbsonde820MMReg <- as.data.frame(cbind(dbsonde820MM$date,dbsonde820MM$TeauMinMM30,dbsonde820MM$TeauMaxMM30))
colnames(dbsonde820MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde820MMReg$date <- as.Date(dbsonde820MMReg$date,origin="1970-01-01")
dbsonde820MMReg <- dbsonde820MMReg[is.na(dbsonde820MMReg$TeauMinMM30)==F,]
dbsonde820MMReg$t = 1:nrow(dbsonde820MMReg)
dbsonde820MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde820MMReg)$fitted.values
dbsonde820MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde820MMReg)$fitted.values
dbsonde820MMReg = dbsonde820MMReg[,-c(2:4)]


dbsonde820MM=merge(dbsonde820MM,dbsonde820MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde820MMReg <- as.data.frame(cbind(dbsonde820MM$date,dbsonde820MM$TeauMinMM365,dbsonde820MM$TeauMaxMM365))
colnames(dbsonde820MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde820MMReg$date <- as.Date(dbsonde820MMReg$date,origin="1970-01-01")
dbsonde820MMReg <- dbsonde820MMReg[is.na(dbsonde820MMReg$TeauMinMM365)==F,]
dbsonde820MMReg$t = 1:nrow(dbsonde820MMReg)
dbsonde820MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde820MMReg)$fitted.values
dbsonde820MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde820MMReg)$fitted.values
dbsonde820MMReg = dbsonde820MMReg[,-c(2:4)]
dbsonde820MM=merge(dbsonde820MM,dbsonde820MMReg,by="date",all.x=T)


db_xts_sonde820 = dbsonde820MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde820MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date820 = dbsonde820MM$date
db_xts_sonde820 = xts(db_xts_sonde820, order.by=db_xts_date820)
db_xts_sonde820a =  db_xts_sonde820[,c(1,4,2,5,11,8)]
db_xts_sonde820b = db_xts_sonde820[,c(6,12,9,17,18)]
db_xts_sonde820b = db_xts_sonde820b[is.na(db_xts_sonde820b$TeauMinMM30)==F,]
db_xts_sonde820c = db_xts_sonde820[,c(7,13,10,19,20)]
db_xts_sonde820c = db_xts_sonde820c[is.na(db_xts_sonde820c$TeauMinMM365)==F,]

rm(dbsonde820MMReg)

rm(dbsonde824MM,dbsonde821MM,dbsonde822MM,dbsonde820MM,
   db_xts_date824,db_xts_date821,db_xts_date822,db_xts_date820)


###########
# Sonde 823
###########
dbsonde823MM <- dbMM[dbMM$id_sonde==823,]

# Calcule droite de régression MM30
dbsonde823MMReg <- as.data.frame(cbind(dbsonde823MM$date,dbsonde823MM$TeauMinMM30,dbsonde823MM$TeauMaxMM30))
colnames(dbsonde823MMReg)=c("date","TeauMinMM30","TeauMaxMM30")
dbsonde823MMReg$date <- as.Date(dbsonde823MMReg$date,origin="1970-01-01")
dbsonde823MMReg <- dbsonde823MMReg[is.na(dbsonde823MMReg$TeauMinMM30)==F,]
dbsonde823MMReg$t = 1:nrow(dbsonde823MMReg)
dbsonde823MMReg$regMinMM30 = lm(TeauMinMM30~t,data= dbsonde823MMReg)$fitted.values
dbsonde823MMReg$regMaxMM30 = lm(TeauMaxMM30~t,data= dbsonde823MMReg)$fitted.values
dbsonde823MMReg = dbsonde823MMReg[,-c(2:4)]


dbsonde823MM=merge(dbsonde823MM,dbsonde823MMReg,by="date",all.x=T)


# Calcule droite de régression MM365
dbsonde823MMReg <- as.data.frame(cbind(dbsonde823MM$date,dbsonde823MM$TeauMinMM365,dbsonde823MM$TeauMaxMM365))
colnames(dbsonde823MMReg)=c("date","TeauMinMM365","TeauMaxMM365")
dbsonde823MMReg$date <- as.Date(dbsonde823MMReg$date,origin="1970-01-01")
dbsonde823MMReg <- dbsonde823MMReg[is.na(dbsonde823MMReg$TeauMinMM365)==F,]
dbsonde823MMReg$t = 1:nrow(dbsonde823MMReg)
dbsonde823MMReg$regMinMM365 = lm(TeauMinMM365~t,data= dbsonde823MMReg)$fitted.values
dbsonde823MMReg$regMaxMM365 = lm(TeauMaxMM365~t,data= dbsonde823MMReg)$fitted.values
dbsonde823MMReg = dbsonde823MMReg[,-c(2:4)]
dbsonde823MM=merge(dbsonde823MM,dbsonde823MMReg,by="date",all.x=T)


db_xts_sonde823 = dbsonde823MM[, c(FALSE, FALSE, rep(T,ncol(dbsonde823MM)-2))] # pour garder que les colonnes / series de températures à transformer
db_xts_date823 = dbsonde823MM$date
db_xts_sonde823 = xts(db_xts_sonde823, order.by=db_xts_date823)
db_xts_sonde823a =  db_xts_sonde823[,c(1,4,2,5,11,8)]
db_xts_sonde823b = db_xts_sonde823[,c(6,12,9,17,18)]
db_xts_sonde823b = db_xts_sonde823b[is.na(db_xts_sonde823b$TeauMinMM30)==F,]
db_xts_sonde823c = db_xts_sonde823[,c(7,13,10,19,20)]
db_xts_sonde823c = db_xts_sonde823c[is.na(db_xts_sonde823c$TeauMinMM365)==F,]

rm(dbsonde823MMReg)

rm(dbsonde824MM,dbsonde821MM,dbsonde822MM,dbsonde823MM,
   db_xts_date824,db_xts_date821,db_xts_date822,db_xts_date823)
####################
# Regroupement des sondes
###################

db_xts_sonde820a$id_sonde = 820
db_xts_sonde821a$id_sonde = 821
db_xts_sonde822a$id_sonde = 822
db_xts_sonde823a$id_sonde = 823
db_xts_sonde824a$id_sonde = 824

db_Selune_xtsa = rbind(db_xts_sonde820a,db_xts_sonde821a,db_xts_sonde822a,db_xts_sonde823a,db_xts_sonde824a)

db_xts_sonde820b$id_sonde = 820
db_xts_sonde821b$id_sonde = 821
db_xts_sonde822b$id_sonde = 822
db_xts_sonde823b$id_sonde = 823
db_xts_sonde824b$id_sonde = 824

db_Selune_xtsb = rbind(db_xts_sonde820b,db_xts_sonde821b,db_xts_sonde822b,db_xts_sonde823b,db_xts_sonde824b)

db_xts_sonde820c$id_sonde = 820
db_xts_sonde821c$id_sonde = 821
db_xts_sonde822c$id_sonde = 822
db_xts_sonde823c$id_sonde = 823
db_xts_sonde824c$id_sonde = 824

db_Selune_xtsc = rbind(db_xts_sonde820c,db_xts_sonde821c,db_xts_sonde822c,db_xts_sonde823c,db_xts_sonde824c)

# dbMM365 <- dbMM[,c("id_sonde", "date","TeauMeanMM365")]
# dbMM365 <- dbMM365[which(is.na(dbMM365$TeauMeanMM365)==F),]
# 
# dbMM365 <- dbMM365 %>%
#   group_by(id_sonde)%>%
#   filter(date==min(date) | date == max(date))
#   
# 
# dbMM365$Diff = NA
# for (i in 1:nrow(dbMM365)){
#   ifelse(dbMM365$id_sonde[i] == dbMM365$id_sonde[i+1],
#          dbMM365$Diff[i] <- dbMM365$TeauMeanMM365[i+1]-dbMM365$TeauMeanMM365[i],
#          dbMM365$Diff[i] <-NA
#          )
# 
# }
#   
# mean(dbMM365$Diff, na.rm=T)





# ####################### #
# Comparaison sondes
# ####################### #

# ####################### #
# moyenne journalière
# ####################### #

min_date = min(db$date)
max_date = max(db$date)

db_xts_comp_teau_moy = data.frame(date=seq(min_date, max_date, "day"))

for(id_s in unique(db$id_sonde)){
  #id_s = 813
  db_temp = db[which(db$id_sonde==id_s),]
  db_temp = aggregate(Teau~date,data=db_temp, FUN=mean)
  
  db_temp[[id_s]] = db_temp$Teau
  
  
  db_xts_comp_teau_moy = merge(db_xts_comp_teau_moy, db_temp[,c("date", id_s)], by="date", all=TRUE)
  
}
#View(db_xts_comp_teau_moy)


choix = c("104", "818", "817")#, "300", "109")
df_choix = data.frame(date = db_xts_comp_teau_moy$date)
for(c in choix){
  df_choix[[c]] = db_xts_comp_teau_moy[[c]]
}
df_xts_choix = xts(df_choix[,-1], order.by=df_choix$date)


dygraph(df_xts_choix)



# ############################### #
# MM30
# ############################### #


db_xts_comp_teau_MM30 = db_xts_comp_teau_moy

for(i in 2:ncol(db_xts_comp_teau_MM30)){
  db_xts_comp_teau_MM30[[i]] = stats::filter(db_xts_comp_teau_MM30[[i]],filter=c(1/(2*30),rep(1/30,29),1/(2*30)))
}

head(db_xts_comp_teau_MM30, 30)



choix = c("104", "818", "817")#, "300", "109")
df_choix = data.frame(date = db_xts_comp_teau_MM30$date)
for(c in choix){
  df_choix[[c]] = db_xts_comp_teau_MM30[[c]]
}
df_xts_choix = xts(df_choix[,-1], order.by=df_choix$date)


dygraph(df_xts_choix)


# ############################### #
# MM365
# ############################### #


db_xts_comp_teau_MM365 = db_xts_comp_teau_moy

for(i in 2:ncol(db_xts_comp_teau_MM365)){
  db_xts_comp_teau_MM365[[i]] = stats::filter(db_xts_comp_teau_MM365[[i]],filter=rep(1/365,365))
}

head(db_xts_comp_teau_MM365, 30)



choix = c("104", "818", "817")#, "300", "109")
df_choix = data.frame(date = db_xts_comp_teau_MM365$date)
for(c in choix){
  df_choix[[c]] = db_xts_comp_teau_MM365[[c]]
}
df_xts_choix = xts(df_choix[,-1], order.by=df_choix$date)


dygraph(df_xts_choix)




# ####################### #
# bi-horaire
# ####################### #


min_t = min(db$t)
max_t = max(db$t)
db_xts_comp_teau_bih = data.frame(t=seq(from = min_t, to = max_t, by = "2 hour"))

for(id_s in unique(db$id_sonde)){
  db_temp = db[which(db$id_sonde==id_s),]
  db_temp[[id_s]] = db_temp$Teau
  db_temp$t = ymd_hms(paste0(year(db_temp$t), "-",
                             month(db_temp$t), "-",
                             day(db_temp$t), " ",
                             ifelse(hour(db_temp$t)%%2==0, hour(db_temp$t), (hour(db_temp$t))-1), ":00:00"))
  db_temp = aggregate(db_temp[id_s], by=db_temp['t'], mean)
  
  
  db_xts_comp_teau_bih = merge(db_xts_comp_teau_bih, db_temp[,c("t", id_s)], by="t", all=TRUE)
  
}

#View(db_xts_comp_teau_bih)


# ####################### #
# fin bi-horaire
# ####################### #


# ----------------------------------------------------------------------------------------------- #
# ####################################################### #
# Base Classification 
# ####################################################### #



db_classif_moy = db_xts_comp_teau_moy
db_classif_bih = db_xts_comp_teau_bih



# ### # ### # ### # ### # ### #
# moyenne journalière
# ### # ### # ### # ### # ### #

# base 1 : sondes Orne Odon Touques Sélune
db_classif_moy1 = db_classif_moy[,c("date", "812", "813", "815", "816",
                                    "817", "818", "819",
                                    "820", "821", "823", "824",
                                    "825", "828", "830")]

head(db_classif_moy1)
dim(db_classif_moy1)



i_deb = which.max(!rowSums(is.na(db_classif_moy1)))
i_fin = nrow(db_classif_moy1)-(which.max(!rowSums(is.na(db_classif_moy1[nrow(db_classif_moy1):1,])))-1)
db_classif_moy1 = db_classif_moy1[i_deb:i_fin,]
db_classif_moy1 = na.locf(na.locf(db_classif_moy1),fromLast=TRUE)

dim(db_classif_moy1)





# base 2
db_classif_moy2 = db_classif_moy[,c("date", 
                                    "104", "109", "762", "764", "771",
                                    "812", "813", "815", "816",
                                    "817", "818", "819",
                                    "820", "821", "823", "824",
                                    "825", "828", "830")]



i_deb = which.max(!rowSums(is.na(db_classif_moy2)))
i_fin = nrow(db_classif_moy2)-(which.max(!rowSums(is.na(db_classif_moy2[nrow(db_classif_moy2):1,])))-1)
db_classif_moy2 = db_classif_moy2[i_deb:i_fin,]
db_classif_moy2 = na.locf(na.locf(db_classif_moy2),fromLast=TRUE)

dim(db_classif_moy2)




# base 3
db_classif_moy3 = db_classif_moy[,c("date", 
                                    "108", "765", "768", "769",
                                    "104", "109", "762", "764", "771",
                                    "812", "813", "815", "816",
                                    "817", "818", "819",
                                    "820", "821", "823", "824",
                                    "825", "828", "830")]


i_deb = which.max(!rowSums(is.na(db_classif_moy3)))
i_fin = nrow(db_classif_moy3)-(which.max(!rowSums(is.na(db_classif_moy3[nrow(db_classif_moy3):1,])))-1)
db_classif_moy3 = db_classif_moy3[i_deb:i_fin,]
db_classif_moy3 = na.locf(na.locf(db_classif_moy3),fromLast=TRUE)

dim(db_classif_moy3)





#help(na.aggregate)


# ### # ### # ### # ### # ### #
# relevé bi-horaire
# ### # ### # ### # ### # ### #


# base 1 : sondes Orne Odon Touques Sélune
db_classif_bih1 = db_classif_bih[,c("t", "812", "813", "815", "816",
                                    "817", "818", "819",
                                    "820", "821", "823", "824",
                                    "825", "828", "830")]


head(db_classif_bih1)
dim(db_classif_bih1)



i_deb = which.max(!rowSums(is.na(db_classif_bih1)))
i_fin = nrow(db_classif_bih1)-(which.max(!rowSums(is.na(db_classif_bih1[nrow(db_classif_bih1):1,])))-1)
db_classif_bih1 = db_classif_bih1[i_deb:i_fin,]
db_classif_bih1 = na.locf(na.locf(db_classif_bih1),fromLast=TRUE)

dim(db_classif_bih1)
tail(db_classif_bih1)



# base 2
db_classif_bih2 = db_classif_bih[,c("t",
                                    "104", "109", "762", "764", "771",
                                    "812", "813", "815", "816",
                                    "817", "818", "819",
                                    "820", "821", "823", "824",
                                    "825", "828", "830")]

head(db_classif_bih2)
dim(db_classif_bih2)



i_deb = which.max(!rowSums(is.na(db_classif_bih2)))
i_fin = nrow(db_classif_bih2)-(which.max(!rowSums(is.na(db_classif_bih2[nrow(db_classif_bih2):1,])))-1)
db_classif_bih2 = db_classif_bih2[i_deb:i_fin,]
db_classif_bih2 = na.locf(na.locf(db_classif_bih2),fromLast=TRUE)

dim(db_classif_bih2)



# base 3
db_classif_bih3 = db_classif_bih[,c("t",
                                    "108", "765", "768", "769",
                                    "104", "109", "762", "764", "771",
                                    "812", "813", "815", "816",
                                    "817", "818", "819",
                                    "820", "821", "823", "824",
                                    "825", "828", "830")]

head(db_classif_bih3)
dim(db_classif_bih3)



i_deb = which.max(!rowSums(is.na(db_classif_bih3)))
i_fin = nrow(db_classif_bih3)-(which.max(!rowSums(is.na(db_classif_bih3[nrow(db_classif_bih3):1,])))-1)
db_classif_bih3 = db_classif_bih3[i_deb:i_fin,]
db_classif_bih3 = na.locf(na.locf(db_classif_bih3),fromLast=TRUE)

dim(db_classif_bih3)




# ####################################################### #
# Fin Base Classification
# ####################################################### #


# ####################################################### #
# Test Classification
# ####################################################### #
library(flamingos)

# dbEssai = db_xts_comp_teau_moy
# 
# na = vector()
# for (i in 2:ncol(dbEssai)){
#   Na = sum(is.na(dbEssai[,i]))
#   na = append(na,Na)
# }
# 
# na
# 
# dbEssai = dbEssai[,na <= 500]
# dbEssai = na.omit(dbEssai)
# dim(dbEssai)
# 
# head(dbEssai)

db_classif_moy1
db_classif_moy2
db_classif_moy3

db_classif_bih1
db_classif_bih2
db_classif_bih3



Y <- t(db_classif_bih3[,2:ncol(db_classif_bih3)])


x <-as.numeric(1:nrow(db_classif_bih3))


K <- 2 # Number of clusters
R <- 8 # Number of regimes (polynomial regression components)
p <- 1 # Degree of the polynomials
q <- 1 # Order of the logistic regression (by default 1 for contiguous segmentation)
variance_type <- "heteroskedastic" # "heteroskedastic" or "homoskedastic" model

n_tries <- 1
max_iter <- 1000
threshold <- 1e-5
verbose <- TRUE
verbose_IRLS <- FALSE
init_kmeans <- TRUE

mixrhlp <- emMixRHLP(X = x, Y = Y, K, R, p, q, variance_type, init_kmeans, 
                     n_tries, max_iter, threshold, verbose, verbose_IRLS)

mixrhlp$summary()


mixrhlp$plot()

mixrhlp$stat$klas



res = data.frame(cluster=mixrhlp$stat$klas)
res$id_sonde = as.numeric(rownames(Y))





for(id_s in unique(res$id_sonde)){
  res[which(res$id_sonde == id_s),"longitude"] = db_sonde_synthese[which(db_sonde_synthese$id_sonde == id_s),]$longitude
  res[which(res$id_sonde == id_s),"latitude"] = db_sonde_synthese[which(db_sonde_synthese$id_sonde == id_s),]$latitude
}

head(res)

help("flamingos-package")

res_clust1 = res[which(res$cluster == 1),]
res_clust2 = res[which(res$cluster == 2),]
head(res_clust2)

vec_col_res = c("blue", "red", "green", "yellow", "cyan", "magenta")

leaflet() %>%
  addTiles() %>%
  addAwesomeMarkers(data = res_clust1, 
                    lng=res_clust1$longitude,lat=res_clust1$latitude,
                    layerId = res_clust1$id_sonde, group=paste0("Cluster",res_clust1$cluster),
                    icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                         iconColor = 'white', markerColor = vec_col_res[1])) %>%
  addAwesomeMarkers(data = res_clust2, 
                    lng=res_clust2$longitude,lat=res_clust2$latitude,
                    layerId = res_clust2$id_sonde, group=paste0("Cluster",res_clust2$cluster),
                    icon=makeAwesomeIcon(icon='tint', library='glyphicon',
                                         iconColor = 'white', markerColor = vec_col_res[2])) %>%
  addPopups(data = res, popup = paste0("sonde : ", res$id_sonde))









# ####################################################### #
# Fin Test Classification
# ####################################################### #






